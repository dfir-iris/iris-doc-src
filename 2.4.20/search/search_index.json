{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#new-to-iris","title":"New to IRIS? \ud83d\udca1","text":"<p>Start with our Getting Started guide to kick-off your IRIS instance in minutes.  </p> <p>Want to try it even faster?  Check out our free rolling version demonstration instance here: IRIS Beta.  </p>"},{"location":"#what-is-iris","title":"What is IRIS?","text":"<p>IRIS is a collaborative digital platform designed for incident response analysts to share complex investigations at a technical level. It can be installed on a dedicated server or as a portable application for roaming investigations where internet access might not be available. </p> <p>Born from the need to easily and effectively communicate lengthy and intricate investigations among analysts, IRIS is an open-source project available on our Github organization.</p>"},{"location":"#lets-connect","title":"Let's connect","text":"<p>Join the IRIS community and expand your network! Feel free to reach out with any questions or feedback on our Discord Channel, engage or follow us on Twitter, share ideas via email. We're always happy to hear from you! </p>"},{"location":"#were-improving","title":"We're improving","text":"<p>Our Documentation is in a constant state of evolution!  \ud83d\ude80  If you can't find what you're looking for, please contact us and we'll make it happen.</p> <p>Powered by the Community, for the Community. </p>"},{"location":"changelog/","title":"Changelog","text":"<p>For upgrades instructions, please see the Upgrades page. </p>"},{"location":"changelog/#v2420-january-15-2025","title":"v2.4.20  January 15, 2025","text":""},{"location":"changelog/#whats-changed","title":"What's changed","text":"<ul> <li>Fixes an issue with alerts correlation that increases creation delay as more and more alerts are added to the system.</li> </ul>"},{"location":"changelog/#v2419-december-21-2024","title":"v2.4.19  December 21, 2024","text":""},{"location":"changelog/#whats-changed_1","title":"What's changed","text":"<ul> <li>Issue with <code>and_</code> conditions in alerts #656</li> <li>Issue when logging out in local auth mode.</li> </ul>"},{"location":"changelog/#v2417-december-9-2024","title":"v2.4.17  December 9, 2024","text":""},{"location":"changelog/#whats-changed_2","title":"What's changed","text":"<ul> <li>Upgraded <code>psycopg2</code> to the latest version to avoid the issue \"SCRAM authentication\" by @rios0rios0 in #637</li> <li>Added <code>severity_id</code> for creating cases by @Vladimir-A in #653</li> <li>Fixed OIDC login issue.</li> <li>Added filtering options in the timeline.</li> </ul>"},{"location":"changelog/#v2416-november-9-2024","title":"v2.4.16  November 9, 2024","text":""},{"location":"changelog/#whats-changed_3","title":"What's changed","text":"<ul> <li>Fixes an issue preventing to use hybrid mode with OIDC / Local when MFA is enabled</li> </ul>"},{"location":"changelog/#v2415-november-9-2024","title":"v2.4.15  November 9, 2024","text":""},{"location":"changelog/#whats-changed_4","title":"What's changed","text":"<ul> <li>Fixes memory issues in alerts leading to memory exhaustion</li> <li>Adds filter fir alert source ref </li> <li>Adds new relations in alerts for future use </li> <li>Better UI for comments indicators </li> </ul>"},{"location":"changelog/#v2414-october-1st-2024","title":"v2.4.14  October 1st, 2024","text":""},{"location":"changelog/#whats-changed_5","title":"What's changed","text":"<ul> <li>Fixes error when deleting a case with notes revisions</li> <li>Fixes alerts similarities associated with alternate customers </li> <li>Improves alerts graph by adding more info at a glance </li> <li>Adds additional filters on alerts </li> </ul>"},{"location":"changelog/#v2413-september-14-2024","title":"v2.4.13  September 14, 2024","text":""},{"location":"changelog/#whats-changed_6","title":"What's changed","text":"<ul> <li>Add OIDC in beta </li> <li>Fix broken merge of alerts in assets </li> <li>Fix alerts and customers checks</li> </ul>"},{"location":"changelog/#v2412-august-28-2024","title":"v2.4.12  August 28, 2024","text":""},{"location":"changelog/#whats-changed_7","title":"What's changed","text":"<ul> <li>Added module to support Seika.io</li> <li>Improved IRIS Webhook module</li> <li>Fixed spelling in editors </li> </ul> <p>Full Changelog</p>"},{"location":"changelog/#v2410-july-29-2024","title":"v2.4.10  July 29, 2024","text":""},{"location":"changelog/#whats-changed_8","title":"What's changed","text":"<p>Fixed  * Issue with errornous outcome setting in cases</p> <p>Full Changelog</p>"},{"location":"changelog/#v249-july-17-2024","title":"v2.4.9  July 17, 2024","text":""},{"location":"changelog/#whats-changed_9","title":"What's changed","text":"<p>Fixed  * Issue with notes revisions assigning wrong user to the revision</p> <p>Full Changelog</p>"},{"location":"changelog/#v248-july-16-2024","title":"v2.4.8  July 16, 2024","text":""},{"location":"changelog/#whats-changed_10","title":"What's changed","text":"<p>Added * Publication of the docker images on Github Container Registry (GHCR) * New GraphQL API endpoints for IOCs and cases  * Automatic load of alerts relations * Notes revisions history</p> <p>Fixed  * Mutliple issues </p> <p>Full Changelog</p>"},{"location":"changelog/#v247-march-18-2024","title":"v2.4.7  March 18, 2024","text":""},{"location":"changelog/#whats-changed_11","title":"What's changed","text":"<p>Fixed  * Issues in the datastore preventing to upload multiple files </p> <p>Full Changelog</p>"},{"location":"changelog/#v246-march-18-2024","title":"v2.4.6  March 18, 2024","text":""},{"location":"changelog/#whats-changed_12","title":"What's changed","text":"<p>\u26a0\ufe0f Important changes are done in the Access Control. If you are upgrading, please carefully read the upgrades instructions.  The layout of the reports has been changed. Reports template need to be upgraded as well. </p> <p>Improved </p> <ul> <li>New notes layout </li> <li>New timeline layout with tree view </li> <li>New timeline feature allowing to create child events </li> <li>New access control feature allowing to associate users with customers </li> <li>CI/CD init by @c8y3 in #401, #400, #402</li> </ul> <p>Fixed </p> <ul> <li>Fix CSS issue by @whikernel in #377</li> <li>Fixes addition of case templates in #379</li> <li>Fix issues with case templates usage in #381</li> <li>Fix issue with IOC lookups in the timeline in #382</li> <li>Fix major collaboration issue in notes in #385</li> <li>Fix PG Extension not being setup properly  in #390</li> <li>Fix multiple security issues impacting case reports and editors</li> </ul>"},{"location":"changelog/#new-contributors","title":"New Contributors","text":"<ul> <li>@MikaelFangel made their first contribution in #414</li> </ul> <p>Full Changelog</p>"},{"location":"changelog/#v237-december-14-2023","title":"v2.3.7  December 14, 2023","text":""},{"location":"changelog/#whats-changed_13","title":"What's Changed","text":"<p>Fixed </p> <ul> <li>Fixes an issue with download of files from the datastore #347</li> <li>Fixes an issue with the addition of protagonist in cases</li> <li>Fixes an issue with case edition modal</li> </ul> <p>Improved</p> <ul> <li>Improved timeline rendering</li> <li>Improved security in Datatables</li> </ul> <p>Full Changelog</p>"},{"location":"changelog/#v236-december-7-2023","title":"v2.3.6  December 7, 2023","text":""},{"location":"changelog/#whats-changed_14","title":"What's Changed","text":"<p>Fixed </p> <ul> <li>Fixes an error preventing the proper generation of reports </li> <li>Fixes an issue with filtering in the overview tab </li> <li>Adds more filtering options in the overview tab </li> </ul> <p>Full Changelog</p>"},{"location":"changelog/#v235-november-30-2023","title":"v2.3.5  November 30, 2023","text":""},{"location":"changelog/#whats-changed_15","title":"What's Changed","text":"<p>Fixed </p> <ul> <li>Fixes an issue introduced in v2.3.4 where the cases metadata are not properly saved. </li> </ul> <p>Full Changelog</p>"},{"location":"changelog/#v234-november-29-2023","title":"v2.3.4  November 29, 2023","text":"<p>A severe bug has been introduced in this version. Please upgarde to v2.3.5.</p>"},{"location":"changelog/#whats-changed_16","title":"What's Changed","text":"<p>Added</p> <ul> <li>Added support for evidences types</li> <li>Added support for cases severity</li> <li>Improved search in context switcher</li> </ul> <p>Fixed </p> <ul> <li>Fixed overview page</li> <li>Fixed dashboard filtering</li> </ul> <p>\u2757 The layout of the reporting has slightly changed. Custom report templates might not work anymore. You can use <code>https://&lt;server&gt;/case/export?cid=&lt;case_id&gt;</code> to get all the possible fields.</p> <p>Full Changelog</p>"},{"location":"changelog/#v233-october-5-2023","title":"v2.3.3  October 5, 2023","text":""},{"location":"changelog/#whats-changed_17","title":"What's Changed","text":"<p>Fixed</p> <ul> <li>Fixed breaking of manage case list if percentage in title </li> <li>Fixed broken title search in overview </li> <li>Fixed sorting of owners in overview </li> <li>Fixed quick look in overview </li> <li>Fixed alert page breaking if username contains trailing space </li> <li>Fixed IrisVTModule links</li> <li>Fixed IrisWebhookModule </li> <li>Fixed refresh after closing of notes </li> </ul> <p>@Scriptception made their first contribution in 313</p> <p>Full Changelog</p>"},{"location":"changelog/#v232-august-2-2023","title":"v2.3.2  August 2, 2023","text":""},{"location":"changelog/#whats-changed_18","title":"What's Changed","text":"<p>Fixed</p> <p>Patches a critical issue corrupting files uploaded to the DataStore via the IOC option or when a password is set </p> <p>Full Changelog</p>"},{"location":"changelog/#v231-july-23-2023","title":"v2.3.1  July 23, 2023","text":""},{"location":"changelog/#whats-changed_19","title":"What's Changed","text":"<p>Improved</p> <ul> <li>Overview page and quick view layout</li> <li>Auto assignment of alerts when not assigned </li> <li>Possibility to filter tags by clicking on them in alerts</li> </ul> <p>Fixed</p> <ul> <li>Call of modules when done from the modals</li> <li>UI</li> </ul> <p>Full Changelog</p>"},{"location":"changelog/#v230-july-09-2023","title":"v2.3.0  July 09, 2023","text":""},{"location":"changelog/#whats-changed_20","title":"What's Changed","text":"<p>Added</p> <ul> <li>Collaborative editor in notes </li> <li>Possibility to add case peer-reviews </li> <li>Alerts resolution status</li> <li>Auto closing of alerts with resolution for linked alerts</li> <li>New webhook module</li> <li>Enhanced overview page</li> <li>Attributed open cases in dashboard</li> <li>Assets and IOCs multi-additions from the UI</li> <li>New UI design</li> </ul> <p>Fixed</p> <ul> <li>Password change for users</li> <li>Description breaking in alerts and events</li> <li>Missing icons in MD rendering for know links</li> <li>Alerts rendering</li> </ul> <p>Full Changelog</p>"},{"location":"changelog/#v223-june-19-2023","title":"v2.2.3  June 19, 2023","text":""},{"location":"changelog/#whats-changed_21","title":"What's Changed","text":"<p>Added</p> <ul> <li>Possibility to use LDAP and local auth as fallback </li> <li>Possibility to add multiple IOCs at once from the UI </li> <li>Possibility to add multiple assets at once from the UI </li> <li>Support for hooks and module calls in alerts </li> <li>URL redirection after login </li> </ul> <p>Fixed</p> <ul> <li>Similarities in alerts when no assets are provided</li> <li>Assertion of data in marshmallow</li> <li>MD editor new lines handling</li> <li>Unicode in datastore</li> <li>Alerts share links </li> <li>Modules info when registering a module</li> <li>UI fixes</li> </ul> <p>Full Changelog</p>"},{"location":"changelog/#v222-may-30-2023","title":"v2.2.2  May 30, 2023","text":""},{"location":"changelog/#whats-changed_22","title":"What's Changed","text":"<p>Added</p> <ul> <li>Possibility to pivot on assets and IOCs from the alerts graph</li> </ul> <p>Fixed - Delete character escaping for passwords by @juadde in #253 - Case template of tasks without tags  - Shortening of case names during updates  - Bad handling of certain requests without CID - Deletion of assets related to alerts once merge into a case </p> <p>Full Changelog</p>"},{"location":"changelog/#v221-may-24-2023","title":"v2.2.1  May 24, 2023","text":""},{"location":"changelog/#whats-changed_23","title":"What's Changed","text":"<p>Note 1: This version contains a security fix for iris-web (see CVE-2023-30615)   Note 2: <code>on_postload_case_info_update</code> hook has been renamed to <code>on_postload_case_update</code> </p> <p>Added</p> <ul> <li>Add newly created users after a LDAP authentication to group Analysts by @c8y3 in #247</li> </ul> <p>Fixed</p> <ul> <li>Security fix of CVE-2023-30615 - GHSA-gc6j-6276-2m49 impacting iris-web &lt; v2.2.1</li> <li>Deletion of cases with assigned tasks </li> <li>Merge of multiple alerts </li> <li>Import of IOCs and Assets in case multiple alerts are merged </li> </ul> <p>Full Changelog </p>"},{"location":"changelog/#v220-may-22-2023","title":"v2.2.0  May 22, 2023","text":""},{"location":"changelog/#whats-changed_24","title":"What's Changed","text":"<p>Added </p> <ul> <li>Basic csv events file import (with default options) by @realsec in #240</li> <li>New endpoints to search for manageable objects such as assets types etc, </li> <li>New search by asset IDs, IOC IDs and events IDs in the timeline</li> </ul> <p>Fixes </p> <ul> <li>Some configuration checks when LDAP and automatic user creation are set by @c8y3 in #246</li> <li>Ensure database connectivity before trying to create tables by @weslambert in #248</li> <li>Merge of multiple alerts in one case not merging the IOCs and assets</li> <li>Bug allowing to add an asset to a timeline not belonging to the same case </li> <li>UI bug fixes</li> </ul> <p>New Contributors </p> <ul> <li>@realsec made their first contribution in #240</li> <li>@weslambert made their first contribution in #248</li> </ul> <p>Full Changelog</p>"},{"location":"changelog/#v210-may-15-2023","title":"v2.1.0  May 15, 2023","text":"<p>If you are using custom SSL certificates, please read the upgrade instructions when upgrading from previous versions. </p>"},{"location":"changelog/#whats-changed_25","title":"What's Changed","text":"<p>Added </p> <ul> <li>Full support of alerts </li> <li>Case templates </li> <li>Provisioning of users </li> <li>Service accounts </li> <li>New permissions </li> </ul> <p>Fixed </p> <ul> <li>Variable LDAP_AUTHENTICATION_TYPE in .env.model by @c8y3 in #217</li> <li>Automatic creation of users with ldap authentication by @c8y3 in #227</li> <li>Update nginx.conf for Security HTTP headers to work. by @oikuda in #216</li> <li>Columns in manage cases #205</li> <li>Customer contact deletion #239</li> <li>Search permissions #237</li> <li>Customer permissions #235</li> <li>Toast split #226</li> <li>Assets exporting #224</li> <li>Assets IOC filtering #223</li> <li>ADM username not enforced #218</li> <li>JIT provisioning of users in LDAP #203</li> </ul> <p>New Contributors </p> <ul> <li>@c8y3 made their first contribution in #217</li> <li>@oikuda made their first contribution in #216</li> </ul> <p>Full Changelog</p>"},{"location":"changelog/#v202-april-18-2023","title":"v2.0.2  April 18, 2023","text":""},{"location":"changelog/#whats-changed_26","title":"What's Changed","text":"<p>Fixed  * Update case_notes_db.py for bug fix #200 by @LoneWolf-96 in #208 * Do not escape_filter_chars for NTLM username by @juadde in #212 * docker-compose cleanup by @juadde in #213 * Listening port not being propagated in nginx docker </p> <p>New Contributors  * @LoneWolf-96 made their first contribution in #208 * @juadde made their first contribution in #212</p> <p>Full Changelog</p>"},{"location":"changelog/#v201-april-05-2023","title":"v2.0.1  April 05, 2023","text":""},{"location":"changelog/#whats-changed_27","title":"What's Changed","text":"<p>Fixed [FIX] Additional table header in case management breaking proper loading of data in #206</p> <p>Full Changelog</p>"},{"location":"changelog/#v200-march-26-2023","title":"v2.0.0  March 26, 2023","text":""},{"location":"changelog/#whats-changed_28","title":"What's Changed","text":"<p>In addition to the features listed below, we are changing the way we are issuing releases. From now on, IRIS follows the Semantic Versioning 2.0 guidelines.  The code ready for production is always tagged with a version number.  <code>alpha</code> and <code>beta</code> versions are not production-ready.   </p> <p>Do not use the <code>master</code> branch in production.  </p> <p>A website with the current development version is also provided and freely accessible. It serves as a beta before public releases.   </p> <p>Added </p> <ul> <li>Groups management </li> <li>Case access control and basic permissions</li> <li>Comments support on a call objects</li> <li>Markdown editors in all case objects </li> <li>Customers dedicated pages with additional information and cases stats </li> <li>LDAP authentication </li> <li>Markdown reporting</li> <li>Case owners, classifications, outcome and tags</li> <li>Possibility to update case basic infornations </li> <li>Case overview page </li> <li>Unique UUID on all case objects </li> <li>Multiple assignees support in case tasks </li> <li>Deletion confirmation prompt on all case objects as an option</li> <li>IOC in events plus optional synchronization with assets</li> <li>Events flagging in the timeline</li> <li>MD links on every case objects</li> </ul> <p>Improved</p> <ul> <li>Dark mode</li> <li>Uniformity of modals</li> <li>Overall UI and UX </li> <li>Compromised status in assets </li> <li>Error reporting in the UI </li> </ul> <p>Fixed </p> <ul> <li>Manual call of modules when multiple modules are availables </li> <li>Multiples bugs fixes </li> <li>Security fixes </li> </ul> <p>Full Changelog </p>"},{"location":"changelog/#v145-june-9-2022","title":"v1.4.5  June 9, 2022","text":"<p>What's Changed</p> <ul> <li>Added a datastore in #115, fixes #30 : <ul> <li>Upload and store any files on IRIS </li> <li>Password protect them as an option </li> <li>Download</li> <li>Add to IOC and/or evidences automatically </li> <li>Reference to files in notes, summary or any textual input </li> <li>Copy/paste of images directly in notes and summary </li> <li>Virtual folders to arrange files</li> </ul> </li> <li>Ability to configure password policy in #117, fixes #116</li> <li>Dark mode improved, flickering removed </li> <li>Multiples bugs fixes </li> <li>Security fixes </li> </ul> <p>Full Changelog </p> <p>Notes: Changes are made to the Nginx docker to allow upload of big files, hence specific upgrades are needed and auto-updates is not yet supported for this version. Please see the upgrades instruction for more details. </p>"},{"location":"changelog/#v144-may-18-2022","title":"v1.4.4  May 18, 2022","text":"<p>What's Changed</p> <ul> <li>Implementation of bulk events editing by @sebastiandemmer in #110</li> <li>Fixes context switch button doesn't load cases by @DevJoost in #112</li> <li>Fixes multiple minor bugs </li> </ul> <p>Full Changelog</p>"},{"location":"changelog/#v143-may-13-2022","title":"v1.4.3  May 13, 2022","text":"<p>What's changed</p> <ul> <li>Managed IRIS updates from itself</li> <li>Custom icons for assets - fixes #44 by @sebastiandemmer</li> <li>IOCs link in timeline and graph - fixes #50 </li> <li>History of modifications in timeline</li> <li>User id in timeline export as an option - fixes #65 </li> <li>Backup of database from the interface </li> <li>Minimisation of modals in cases </li> <li>New UI improvements in timeline </li> <li>New minimal notifications for almost all activities</li> <li>Improved overall responsiveness and speed </li> <li>Improved error feedbacks to users</li> <li>Improved load of tasks results by x10</li> <li>Code cleaning</li> <li>Multiple bug fixes</li> </ul> <p>Full Changelog</p>"},{"location":"changelog/#v142-april-22-2022","title":"v1.4.2  April 22, 2022","text":"<p>Improvements :   </p> <ul> <li>Possibility to duplicates events in timeline - #91 </li> <li>Possibility to filter timeline with basic query - #94 </li> </ul> <p>Fixes :   </p> <ul> <li>Integer limit on file size in evidences - #89 </li> <li>Gradient in closed cases   </li> <li>on-preload hooks list handling - #92 </li> <li>tags issue - #88 </li> <li>Case info modal from case - #93 </li> <li>Multiple UI issues   </li> </ul>"},{"location":"changelog/#v141-april-8-2022","title":"v1.4.1  April 8, 2022","text":"<ul> <li>Fixes a scrolling issue of the timeline when events are being popped </li> </ul>"},{"location":"changelog/#v140-april-6-2022","title":"v1.4.0  April 6, 2022","text":"<p>A bug fixe exists for this version. See v1.4.3 </p> <ul> <li>Hooks, adding the ability for modules to react on almost anything happening on the plateform in #75</li> <li>New type of modules that can handles hooks </li> <li>VirusTotal beta integration as a processor module </li> <li>MISP beta integration as a processor module </li> <li>Custom attributes on all case objects allowing to extend the default fields </li> <li>A compact timeline view for better visbility </li> <li>Premises of a dark theme</li> <li>Resiliency of docker volume in #80</li> <li>Minor improvements in #69, #79</li> <li>Bug fixes in #70, #73, #77</li> <li>Security fixes </li> </ul>"},{"location":"changelog/#v131-march-19-2022","title":"v1.3.1  March 19, 2022","text":"<ul> <li>Fixes wheel issue preventing proper build of the docker, as described in #83</li> </ul>"},{"location":"changelog/#v130-january-24-2022","title":"v1.3.0  January 24, 2022","text":"<ul> <li>Added the ability to batch upload IOC from a CSV file in  #26</li> <li>Added the ability to batch upload assets from a CSV</li> <li>Screenshot - Export contents of any case pages as PNG in #35</li> <li>Export timeline as CSV in #47</li> <li>Improved timeline loading time by x10 - loads thousands of events in a sec </li> <li>New auto parsing of dates in events addition/updates</li> <li>Brand new timeline visualisations </li> <li>Improved assets loading time </li> <li>Shared links - easily share any case objects with your collaborators</li> <li>Right panel now offers last activities for user's current case</li> <li>Added assets tags in #37</li> <li>New API endpoints in #53</li> <li>Auto migration of database for next releases</li> <li>Indication of mandatory fields in forms </li> <li>General bug fixes, stability and UI improvement </li> </ul>"},{"location":"changelog/#v121-december-31-2021","title":"v1.2.1  December 31, 2021","text":"<ul> <li>Added ATT&amp;CK tactics by @ecapuano in #9</li> <li>Added screenshot and video link in readme in #12</li> <li>Fixed duplicated path to add customer in #4</li> <li>Fixed asset description data validation client side in #7</li> <li>Fixed tooltip in #10</li> <li>Add a per-column filtering field in the case view by in #15</li> </ul>"},{"location":"contact/","title":"Contacting us","text":"<p>You can directly contact us, should you need direct support, a demo, further information or anything else related to the project. </p> <p> contact@dfir-iris.org</p> <p> Discord </p> <p> Twitter</p>"},{"location":"credits/","title":"Credits","text":"<p>IRIS uses dozen of OS modules and this list is not exhaustive. If you developped something which is used in IRIS and does not figures here, you can contact us. </p> <ul> <li>Flask</li> <li>SQLAlchemy</li> <li>PostgreSQL</li> <li>Celery </li> <li>RabbitMQ</li> <li>Docker</li> <li>Atlantis</li> <li>Flaticon</li> <li>Font Awesone</li> <li>Datatables</li> <li>JQuery</li> <li>MkDocs</li> <li>MkDocs Materials</li> <li>Tailwind</li> <li>MISP module for Cortex</li> <li>Virus Total Apis</li> </ul>"},{"location":"getting_started/","title":"Quick Start","text":"<p>Dive into the most straightforward and recommended way to use IRIS with Docker, detailed below. </p>"},{"location":"getting_started/#pre-requisites","title":"Pre-requisites","text":""},{"location":"getting_started/#hardware","title":"Hardware \ud83d\udcbb","text":"<p>IRIS is designed to be lightweight yet scalable, running smoothly on small laptops or powering large organizations. For a typical instance of 10 users, daily usage of ~200 alerts, and a few ongoing cases: </p> <ul> <li>CPU : 8 cores</li> <li>RAM : 32 GB</li> <li>Storage : 1 TB fast SSD</li> </ul> <p>Keep in mind that the database can grow rapidly, and modules may require more resources depending on their specific purposes. </p>"},{"location":"getting_started/#docker","title":"Docker \ud83d\udc33","text":"<p>IRIS requires Docker and Docker Compose for building and running the project. For installation instructions visit the official Docker website.   </p> <p>The platform is officially supported on most Linux and MacOS systems. While it should work on Windows, some changes may be necessary to the dockerfiles for file storage paths. </p>"},{"location":"getting_started/#versioning","title":"Versioning \ud83d\udcc8","text":"<p>Production-ready code is always tagged with a specific version number. Alpha and beta versions are not production-ready, so please avoid using the master branch for live environments.  </p>"},{"location":"getting_started/#run-iris","title":"Run IRIS \ud83c\udfd7\ufe0f","text":"<p>To run IRIS, follow these steps:</p> <ol> <li> <p>Clone the <code>iris-web</code> repository:</p> <pre><code>git clone https://github.com/dfir-iris/iris-web.git\ncd iris-web\n</code></pre> </li> <li> <p>Check out the latest non-beta tagged version: </p> <pre><code>git checkout v2.4.20\n</code></pre> </li> <li> <p>Copy the environment file </p> <pre><code>cp .env.model .env\n</code></pre> <p>Warning</p> <p>The default configuration is suitable for testing only. To configure IRIS for production, see the configuration section. </p> </li> <li> <p>Pull the Docker containers:</p> <pre><code>docker compose pull\n</code></pre> </li> <li> <p>Start IRIS:</p> <pre><code># Add \"-d\" to put it in the background\ndocker compose up\n</code></pre> </li> </ol> <p>IRIS should now be accessible on your host interface via HTTPS protocol, port 443 by default. You can access it through your web browser using <code>https://hostip</code>. </p> <p>Upon first start, an administrator account will be created. The password is printed in the console output and can be found by searching for <code>WARNING :: post_init :: create_safe_admin</code> in the logs. Alternatively, you can define an admin password at the first start using the <code>IRIS_ADM_PASSWORD</code> environment variable in the <code>.env</code>. Please note that this setting has no effect once the administrator account is created.</p> <p>Info</p> <p>If you don't find the password in the logs, try running <code>docker compose logs app | grep \"WARNING :: post_init :: create_safe_admin\"</code>. If the logs indicate that user administrator is already created, it means the instance already started once and the password has already been set. Check the recovery options. </p> <p>IRIS should now be available on the host interface, port 443, using HTTPS protocol by default. You can access it by navigating to https://hostip in your web browser.   </p>"},{"location":"getting_started/#additional-configuration","title":"Additional configuration \ud83d\udee0\ufe0f","text":"<p>Please see configuration for more details.</p>"},{"location":"getting_started/#kubernetes","title":"Kubernetes","text":"<p>Enterprises wishing to run their IRIS instance on their preferred managed Kubernetes platform can utilize the official Helm charts and/or Kustomize manifests for enhanced deployment and management, ensuring high availability and seamless scaling as demand fluctuates. </p> <p>The deploy directory in the iris-web GitHub repository provides a starting point for deploying IRIS using EKS or GKE. Customize each variant with your values for a smooth deployment experience. </p> <p>For more details, please visit the deploy directory on GitHub.  </p>"},{"location":"getting_started/#components","title":"Components \ud83d\udce6","text":"<p>Note that IRIS is split into five Docker services, each with a different role:</p> <ul> <li><code>app</code> - iris_webapp: The core, including web server, database management, module management, etc.</li> <li><code>db</code>: A PostgreSQL database</li> <li><code>RabbitMQ</code>: A RabbitMQ engine to handle job queuing and processing</li> <li><code>worker</code>: A job handler relying on RabbitMQ</li> <li><code>nginx</code>: A NGINX reverse proxy</li> </ul> <p>Each service can be built independently, which is useful when developing. In this QuickStart, all services are built at once. </p>"},{"location":"resources/","title":"Resources","text":"<p>This page is a collection of external resources to help you get started with IRIS and integrate it into your workflow. Please note that some of these resources may be outdated. If you want to add your own resources, please open a pull request or contact us.   </p>"},{"location":"resources/#blog-posts","title":"Blog posts","text":"<ul> <li>Building a FOSS SOC by nateuribe</li> <li>Integrating Wazuh with IRIS by stasis - Please note that Wazuh needs to send alerts on port 443 by default, not 8000 as specified in the article</li> <li>IRIS and a bit of MISP by vanimpe</li> <li>IRIS and Wazuh </li> <li>Enhancing incident response with Wazuh and DFIR-IRIS integration</li> <li>Open Source SOC</li> </ul>"},{"location":"resources/#iris-modules","title":"IRIS Modules","text":"<ul> <li>SOC Fortress on Github</li> </ul>"},{"location":"resources/#videos","title":"Videos","text":"<ul> <li>SOC Fortress: IRIS </li> </ul>"},{"location":"resources/#misc","title":"MISC","text":"<ul> <li>Integrating IRIS with Tines by Michael Tolan</li> </ul>"},{"location":"roadmap/","title":"Roadmap","text":"<p>Note of 25-05-2023</p> <p>IRIS is growing both in code and interestes. To future-proof the project, we have decided to pause the development of new features and focus on the core functionalities and stability for a while. This includes a major refactoring of the codebase. We will still fix bugs and security issues.</p> <p>We do not provide a long-term roadmap to prevent any frustration and unmet expectations. It is constantly evolving with feedbacks we receive.</p> <p> We've thus moved it within a Github project. You can check it here.</p>"},{"location":"security-advisories/","title":"Security Advisories","text":"<p>We take security seriously at DFIR-IRIS. We are committed to providing a secure and reliable platform for our users. If you believe you have found a security vulnerability in any of our projects, please report it to us by sending an email to contact@dfir-iris.org. We will investigate all legitimate reports and do our best to quickly fix the problem.   </p> <p>This page lists all security advisories that have been published for the code released by DFIR-IRIS.</p>"},{"location":"security-advisories/#cve-2024-34060-feb-18-2024","title":"CVE-2024-34060  Feb 18, 2024","text":"CVE ID Github ID Severity Impacted product CVE-2024-34060 GHSA-9rw6-5q9j-82fm High - CVSS3 4.6/10 iris-evtx-module"},{"location":"security-advisories/#description","title":"Description","text":"<p>The iris-evtx-module is a pipeline plugin of iris-web that processes EVTX files through IRIS web application. During the upload of an EVTX through this pipeline, the filename is not safely handled and may cause an Arbitrary File Write. This can lead to a remote code execution (RCE) when combined with a Server Side Template Injection (SSTI).</p> <p>This module is not enabled by default.</p>"},{"location":"security-advisories/#affected-versions","title":"Affected versions","text":"<ul> <li><code>iris-evtx-module</code> &lt; <code>1.0.0</code></li> </ul>"},{"location":"security-advisories/#fixed-versions","title":"Fixed versions","text":"<ul> <li><code>iris-evtx-module</code> &gt;= <code>1.0.0</code></li> </ul>"},{"location":"security-advisories/#workarounds","title":"Workarounds","text":"<p>Disable the module in IRIS Advanced settings. The module is not enabled by default.  </p>"},{"location":"security-advisories/#acknowledgment","title":"Acknowledgment","text":"<p>Thanks to Dan Shallom (OP Innovate) for the responsible disclosure.  </p>"},{"location":"security-advisories/#cve-2024-25640-feb-18-2024","title":"CVE-2024-25640  Feb 18, 2024","text":"CVE ID Github ID Severity Impacted product CVE-2024-25640 GHSA-2xq6-qc74-w5vp Moderate - CVSS3 4.6/10 iris-web"},{"location":"security-advisories/#description_1","title":"Description","text":"<p>A stored Cross-Site Scripting (XSS) vulnerability has been identified in iris-web, affecting multiple locations, notably descriptions inputs, in versions prior to v2.4.0. The vulnerability may allow an attacker to inject malicious scripts into the application, which could then be executed when a user visits the affected locations. This could lead to unauthorized access, data theft, or other related malicious activities. </p> <p>An attacker need to be authenticated on the application to exploit this vulnerability. </p>"},{"location":"security-advisories/#affected-versions_1","title":"Affected versions","text":"<ul> <li><code>iris-web</code> &lt; <code>2.4.0</code></li> </ul>"},{"location":"security-advisories/#fixed-versions_1","title":"Fixed versions","text":"<ul> <li><code>iris-web</code> &gt;= <code>2.4.0</code></li> </ul>"},{"location":"security-advisories/#workarounds_1","title":"Workarounds","text":"<p>No workarounds are available. It is recommended to upgrade to the latest version of iris-web.</p>"},{"location":"security-advisories/#acknowledgment_1","title":"Acknowledgment","text":"<p>Thanks to Yehonatan Harizi (OP-C) for the responsible disclosure. </p>"},{"location":"security-advisories/#cve-2024-25624-feb-15-2024","title":"CVE-2024-25624  Feb 15, 2024","text":"CVE ID Github ID Severity Impacted product CVE-2024-25624 GHSA-m64w-f7fg-hpcr High - CVSS3 7.2/10 iris-web"},{"location":"security-advisories/#description_2","title":"Description","text":"<p>Due to an improper setup of Jinja2 environment, reports generation in iris-web is prone to a Server Side Template Injection (SSTI). Successful exploitation of the vulnerability can lead to an arbitrary Remote Code Execution.</p> <p>An authenticated administrator has to upload a crafted report template containing the payload. Upon generation of a report based on the weaponised template, any user can trigger the vulnerability.   </p>"},{"location":"security-advisories/#affected-versions_2","title":"Affected versions","text":"<ul> <li><code>iris-web</code> &lt; <code>2.4.6</code></li> </ul>"},{"location":"security-advisories/#fixed-versions_2","title":"Fixed versions","text":"<ul> <li><code>iris-web</code> &gt;= <code>2.4.6</code></li> </ul>"},{"location":"security-advisories/#workarounds_2","title":"Workarounds","text":"<p>No workaround is available. It is recommended to update as soon as possible. Until patching, review the report templates and keep the administrative privileges that include the upload of report templates limited to dedicated users.</p>"},{"location":"security-advisories/#acknowledgment_2","title":"Acknowledgment","text":"<p>Thanks to Dan Shallom (OP Innovate) for the responsible disclosure.</p>"},{"location":"security-advisories/#cve-2023-50712-dec-18-2023","title":"CVE-2023-50712  Dec 18, 2023","text":"CVE ID Github ID Severity Impacted product CVE-2023-30615 GHSA-593r-747g-p92p Moderate - CVSS3 4.6/10 iris-web"},{"location":"security-advisories/#description_3","title":"Description","text":"<p>A stored Cross-Site Scripting (XSS) vulnerability has been identified in iris-web, affecting multiple locations in versions prior to v2.3.7. The vulnerability may allow an attacker to inject malicious scripts into the application, which could then be executed when a user visits the affected locations. This could lead to unauthorized access, data theft, or other related malicious activities.</p> <p>An attacker need to be authenticated on the application to exploit this vulnerability.</p>"},{"location":"security-advisories/#affected-versions_3","title":"Affected versions","text":"<ul> <li><code>iris-web</code> &lt; <code>2.3.7</code></li> </ul>"},{"location":"security-advisories/#fixed-versions_3","title":"Fixed versions","text":"<ul> <li><code>iris-web</code> &gt;= <code>2.3.7</code></li> </ul>"},{"location":"security-advisories/#workarounds_3","title":"Workarounds","text":"<p>No workaround is available.  </p>"},{"location":"security-advisories/#acknowledgment_3","title":"Acknowledgment","text":"<p>Thanks to Leonard Rapp (G DATA Advanced Analytics GmbH) for the responsible disclosure.</p>"},{"location":"security-advisories/#cve-2023-30615-may-24-2023","title":"CVE-2023-30615  May 24, 2023","text":"CVE ID Github ID Severity Impacted product  CVE-2023-30615 GHSA-gc6j-6276-2m49 Moderate - CVSS3 4.6/10 iris-web"},{"location":"security-advisories/#description_4","title":"Description","text":"<p>A stored Cross-Site Scripting (XSS) vulnerability has been identified in <code>iris-web</code>, affecting multiple locations in versions prior to <code>v2.2.1</code>. The vulnerability allows an attacker to inject malicious scripts into the application, which are then executed when a user visits the affected locations. This can lead to unauthorized access, data theft, or other related malicious activities.</p> <p>An attacker need to be authenticated on the application to exploit this vulnerability.</p>"},{"location":"security-advisories/#affected-versions_4","title":"Affected versions","text":"<ul> <li><code>iris-web</code> &lt; <code>2.2.1</code></li> <li><code>iris-web</code> &gt; <code>2.0.0</code> and &lt; <code>2.2.1</code> while not using the alerting feature are not impacted.</li> </ul>"},{"location":"security-advisories/#fixed-versions_4","title":"Fixed versions","text":"<ul> <li><code>iris-web</code> &gt;= <code>2.2.1</code></li> </ul>"},{"location":"security-advisories/#workarounds_4","title":"Workarounds","text":"<p>No workaround is available.</p>"},{"location":"support/","title":"Getting support","text":"<p>We understand the importance of having robust support and training to maximize the effectiveness of our tools in your IR efforts. Here's how we can assist:</p> <ul> <li>Getting started</li> <li>Support and implementation</li> <li>Trainings</li> </ul> <p>We're flexible and can accommodate needs through our OpenCollective page.</p> <p>Please get in touch with us at contact@dfir-iris.org for further details. </p>"},{"location":"support_us/","title":"Support us","text":"<p>As a free and open source project, we rely on the support of our community to continue development and improve our platform. If you find the platform useful and would like to help us sustain and grow, you may consider supporting us financially through OpenCollective. </p> <p>Support us </p>"},{"location":"zqa/","title":"Q &amp; A","text":""},{"location":"zqa/#general-questions","title":"General questions","text":""},{"location":"zqa/#which-version-should-i-install","title":"Which version should I install?","text":"<p>The master branch is stable as all the development is done under the develop branch and merged once ready. To ease the identification, each new version is tagged and a new release is published. We recommend using these. <code>git checkout &lt;tagged_version&gt;</code></p>"},{"location":"zqa/#is-the-project-maintained","title":"Is the project maintained?","text":"<p>Yes, IRIS is under heavy development. We are adding more and more features, led by feedbacks from the community.  </p>"},{"location":"zqa/#what-is-the-future-of-the-project","title":"What is the future of the project?","text":"<p>We aim to make it evolve as much as possible with the help of the community. We have long term goals to integrate it seamlessly  with project like MISP and other OS project, but we don't provide any commitment on how and when to avoid any unmet expectations.  For a short term roadmap, you can head to the Github project.   </p>"},{"location":"zqa/#how-can-i-contact-the-dfir-iris-team","title":"How can I contact the DFIR-IRIS team?","text":"<p>You can reach us on discord, Twitter or by email.</p>"},{"location":"zqa/#cases","title":"Cases","text":""},{"location":"zqa/#can-i-recover-a-deleted-case","title":"Can I recover a deleted case?","text":"<p>No. Cases are deleted from the database and changes are committed.  There is no coming back unless you have made backups of the database (which we recommend).</p>"},{"location":"zqa/#can-i-recover-a-deleted-case-object","title":"Can I recover a deleted case object?","text":"<p>No. Every object such as IOCs, assets, events, notes, etc are immediately deleted from the database and changes are committed. </p>"},{"location":"zqa/#can-i-add-a-new-asset-type","title":"Can I add a new asset type?","text":"<p>Yes. With a user that have administrative rights, go to <code>Advanced</code> &gt; <code>Case Objects</code>. </p>"},{"location":"zqa/#can-i-add-a-new-ioc-type","title":"Can I add a new IOC type?","text":"<p>Yes. Starting from v1.3.0, IOC types can be manipulated. Head to <code>Advanced</code> &gt; <code>Case Objects</code> </p>"},{"location":"zqa/#can-i-add-new-fields-to-case-objects-such-as-iocs-assets-etc","title":"Can I add new fields to case objects such as IOCs, Assets, etc?","text":"<p>Yes. Starting from v1.4.0, all case objects can be extended thanks to custom attributes.  With a user that have administrative rights, go to <code>Advanced</code> &gt; <code>Custom Attributes</code>. </p>"},{"location":"zqa/#can-i-search-into-custom-attributes-fields","title":"Can I search into custom attributes fields?","text":"<p>Not for now. The searches in each case objects page are done client-side, and the attributes are not fetched. We will however implement a server side search in next releases.  </p>"},{"location":"zqa/#can-i-create-two-cases-with-the-same-name-for-the-same-customer","title":"Can I create two cases with the same name for the same customer?","text":"<p>Yes. Cases are identified with a unique number, so they can have the same name. </p>"},{"location":"zqa/#can-i-restrict-the-view-of-case-to-a-set-of-users","title":"Can I restrict the view of case to a set of users?","text":"<p>Yes it is since v2.0.0. See Access control.  </p>"},{"location":"zqa/#can-i-change-the-name-or-customer-of-an-existing-case","title":"Can I change the name or customer of an existing case?","text":"<p>Yes it is since v2.0.0. </p>"},{"location":"zqa/#operations","title":"Operations","text":""},{"location":"zqa/#what-is-the-password-policy-can-it-be-changed","title":"What is the password policy? Can it be changed?","text":"<p>Before v1.4.5, the password policy is hardcoded and cannot be changed.  It should be 12 characters minimum and contains a capital letter and a number.   After v1.4.5, the password policy can be changed in <code>Advanced</code> &gt; <code>Server settings</code>.   </p>"},{"location":"zqa/#can-i-change-my-profile-picture","title":"Can I change my profile picture?","text":"<p>No, not for now. This wasn't a priority for us, it will be released in future versions. </p>"},{"location":"zqa/#i-lost-the-administrator-password-can-i-recover-it","title":"I lost the administrator password, can I recover it?","text":"<p>Passwords are hashed so they can't be recovered. But you can change it. Please see changing a lost password.  </p>"},{"location":"zqa/#can-i-delete-a-user","title":"Can I delete a user?","text":"<p>No. To keep consistencies in the database, users unfortunately cannot be deleted if they have done some activities. You can however disable them to prevent them appearing in the UI and connecting to the plafeform.  </p>"},{"location":"zqa/#can-i-delete-a-customer","title":"Can I delete a customer?","text":"<p>No. To keep consistencies in the database, customers unfortunately cannot be deleted if they are linked to cases. </p>"},{"location":"zqa/#can-i-prevent-backrefs-of-assets-and-iocs","title":"Can I prevent backrefs of assets and IOCs?","text":"<p>No. It might be possible in future versions but for now it is better to spin up a new instance for restricted cases. The backref is however automatically disabled for performance reasons, for cases with more than 300 assets. We are working on a more efficient way to backref. </p>"},{"location":"zqa/#my-report-template-is-not-generated-and-generates-an-error","title":"My report template is not generated and generates an error","text":"<p>Please triple check typos in tags as there is no fault tolerance. You can reach us in case of troubles.  </p>"},{"location":"zqa/#integration","title":"Integration","text":""},{"location":"zqa/#can-i-enrich-iocs-with-external-sources","title":"Can I enrich IOCs with external sources?","text":"<p>Starting from v1.4.0, it is now possible to easily develop module to enrich case objects. A module Iris VT and IRIS MISP are already provided.  </p>"},{"location":"zqa/#is-there-an-api-client","title":"Is there an API client?","text":"<p>Yes, you can find it on our Github. </p>"},{"location":"zqa/#i-added-alerts-via-the-api-but-i-dont-see-them-on-the-ui","title":"I added alerts via the API but I don't see them on the UI","text":"<p>If the server replied <code>200</code> for the alert creation, it means the alert is stored in IRIS. If your user do not see the alerts, it means it needs to be added to the appropriate customer (see alerts). </p>"},{"location":"zqa/#security","title":"Security","text":""},{"location":"zqa/#can-i-restrict-cases","title":"Can I restrict cases?","text":"<p>Yes it is since v2.0.0. See Access control.  </p>"},{"location":"zqa/#can-i-expose-iris-on-the-internet","title":"Can I expose IRIS on the Internet?","text":"<p>NO! Please don't. This platform should only be accessible in a restricted environment. </p>"},{"location":"zqa/#i-found-a-security-issue-can-i-have-a-bounty","title":"I found a security issue, can I have a bounty?","text":"<p>No - IRIS is free and open source so there is no bounty. Please report it as soon as possible so we can fix it. </p>"},{"location":"zqa/#misc","title":"MISC","text":""},{"location":"zqa/#what-does-iris-stand-for","title":"What does IRIS stand for?","text":"<p>Originally Incident Response Investigation System. But it can be whatever you want really. </p>"},{"location":"api_reference/reference/","title":"File organization and naming conventions","text":"<p>For a given version, the following directories may be present * parameters   * path: the name of the parameter is used as file name. To differentiate parameters with the same name but used in different context, the file name can be prefixed a portion of the path.   * query: the name of the parameter is used as file name. * resources: the name of the resource files follows the resource path (slashes are converted to underscores). The operationId should correspond to the name of the file to which with the http verb is added. * responses: in camel cases * schemas: in camel cases</p>"},{"location":"api_reference/reference/#generation","title":"Generation","text":"<p>To generate the documentation: <pre><code>npx @redocly/cli build-docs iris.v2.1.0.yaml\n</code></pre></p>"},{"location":"api_reference/reference/#file-organisation","title":"File organisation","text":"<p>To ease maintenance, the openapi file is split in several files: * resources are stored in <code>${VERSION}/schemas/${SCHEMA_NAME}.yaml</code> * schemas are stored in <code>${VERSION}/resources/${RESOURCE_NAME}.yaml</code></p> <p>When a new version is introduced, only the new fragments are updated and put in the new <code>${VERSION}</code> directory.</p>"},{"location":"api_reference/reference/#some-other-useful-commands","title":"Some other useful commands","text":"<p>Preview: <pre><code>npx @redocly/cli preview-docs iris.v2.1.0.yaml\n</code></pre></p> <p>Lint: <pre><code>npx @redocly/cli lint iris.v2.1.0.yaml\n</code></pre></p> <p>Bundle: <pre><code>npx @redocly/cli bundle iris.v2.1.0.yaml --output &lt;specification.yaml&gt;\n</code></pre></p>"},{"location":"development/","title":"Development","text":"<p>This section is under construction and more elements will be added over time</p> <p>This documentation is not a detailed how-to develop IRIS. It gives some insights to help understand the basic code of the project and how to contribute.  </p>"},{"location":"development/#general-repositories-conventions","title":"General repositories conventions","text":""},{"location":"development/#branches","title":"Branches","text":"<p>We are using the Gitflow Workflow to manage our git branches. In a nutshell :  </p> <ul> <li><code>master</code> contains only \"production-ready\" code</li> <li><code>develop</code> contains the major development code. When ready it is tagged and merged into <code>master</code></li> <li>The sub-branches of <code>develop</code> contains either : <ul> <li>A new feature in development, in which case the naming convention is <code>new_feature</code></li> <li>An issue fixe, in which case the name convention is <code>iXX_issue_title</code>, with XX being the issue number </li> </ul> </li> </ul>"},{"location":"development/#commits","title":"Commits","text":"<p>The commits convention is the following : </p> <ul> <li>Create commits as small as possible, i.e atomic commits  </li> <li>If it's not related to an issue, the format <code>[action] Commit message</code> is used, with <code>action</code> being a 3 letters action related to the commit, eg <code>ADD</code>for additions, <code>DEL</code> for deletions, <code>IMP</code> for improvements, etc.</li> <li>If it's related to an issue, prepend with the issue ID, i.e <code>[#issue_id][action] Commit message</code> </li> </ul>"},{"location":"development/#sections","title":"Sections","text":"<p>The following sections are available in this documentation : </p> <ul> <li>Structure overview : general structure of IRIS code </li> <li>Environment setup : guide to setup a development environment </li> <li>Coding tips :  basic codes hints</li> <li>DB migration : things to consider if the code changes the DB schema </li> <li>Hooks : an introduction to IRIS hooks </li> <li>Modules : a guide to develop modules </li> </ul>"},{"location":"development/code-tips/","title":"Coding tips","text":""},{"location":"development/code-tips/#routes","title":"Routes","text":"<p>IRIS does not defines a separate API for users, meaning the HTML pages are actually using the API themselves. Routes don't need to handle the authentication and roles. These are handles by wrappers (see snippets below).  </p>"},{"location":"development/code-tips/#page-route","title":"Page route","text":"<p>A page returns an HTML content and should use the following code structure :  Example of page route<pre><code>@blueprint.route('/a/good/route', methods=['GET']) # (1)\n@login_required # (2)\ndef view_a_good_route(caseid, url_redir):  # (3)\n    if url_redir:\n        return redirect(url_for('bluprintname.method_name', cid=caseid))  # (4)\n\n    # route code \n\n    return render_template(\"a_good_route.html\", variable_1=var_1, ...)  # (5)\n</code></pre></p> <ol> <li>This defines which URI the route is handling as well as the methods it supports (ie GET, POST, etc). In IRIS, we try to limit one method per route.  </li> <li>This defines the security of the endpoint. <code>@login_required</code> is used for users page and <code>@admin_login_required</code> is used for admin restricted pages.  </li> <li><code>caseid</code> and <code>url_redir</code> are variable provided by <code>@login_required</code> and <code>@admin_login_required</code> wraps. <code>caseid</code> indicates which case ID the user tried to access the route with. <code>url_redir</code> indicates the caseid provided wasn't valid and a redirection is needed.  </li> <li>In case a redirection is needed, provide the URL to which the redirection should be done. It's often the page method itself except for modales.  </li> <li>A page route needs to return an HTML template. <code>variable_1</code> is a value that can be accessed from within the template itself. More variables can be added, or not at all.  </li> </ol>"},{"location":"development/code-tips/#api-route","title":"API route","text":"<p>An API route returns a JSON content. Two types are pre-defined and should be used :  Standard API returns<pre><code>response_success(msg=\"A success message\", data=&lt;data associated with the success feedback&gt;)\n\nresponse_error(msg=\"An error message\", data=&lt;data associated with the error feedback&gt;, status=&lt;status code, by default 400&gt;)\n</code></pre></p> <p>Below is an example of standard API route.  Example of page route<pre><code>@blueprint.route('/a/good/api_route', methods=['GET']) # (1)\n@api_login_required # (2)\ndef view_a_good_route(caseid):  # (3)\n\n    # API route code \n\n    return response_success(\"ok\", data=my_data_object)  # (4)\n</code></pre></p> <ol> <li>This defines which URI the route is handling as well as the methods it supports (ie GET, POST, etc). In IRIS, we try to limit one method per route.  </li> <li>This defines the security of the endpoint. <code>@api_login_required</code> is used for users API endpoints and <code>@api_admin_required</code> is used for admin restricted endpoints.  </li> <li><code>caseid</code> is provided <code>@api_login_required</code> and <code>@api_admin_required</code> wraps. It indicates which case ID the user tried to access the endpoint with. </li> <li>One of the standard return defined above.   </li> </ol>"},{"location":"development/db-migration/","title":"DB Migrations","text":"<p>In case a DB migration is needed, you need to provide an alembic migration script. </p> <p>Test your migration</p> <p>Please try out your migration as this is an important piece of the upgrades. Spin up an old version of IRIS, input some data and then try to start your new version. Ensure that everything is migrated as expected.  </p> <p>In a terminal and from within the IRIS virtual env :  </p> <ol> <li>Go to <code>source</code> </li> <li>Issue the following command : <code>alembic -c app/alembic.ini revision -m \"A few words to describe your changes\"</code> </li> </ol> <p>This creates a new revision file <code>source &gt; app &gt; alembic &gt; versions</code>.  It's a Python file that basically describes what needs to be updated DB-wise. You can take example from the ones we already have generated in the same folder. </p> <p>Hint</p> <p>During your tests you might face the issue that Alembic does not apply your changes after you executed it once. It's because it keeps tracks of the latest applied revision in a table <code>alembic_version</code>. It doesn't know you changed the revision file. In that case the trick is to connect to the DB, and then delete the entry in the alembic_version. This will force it to reapply all revisions at startup. If you're using the DB docker you can use the following:</p> <ul> <li><code>docker exec -it &lt;db_container_id&gt; /bin/sh</code> </li> <li><code>su postgres</code></li> <li><code>psql</code></li> <li><code>\\c iris_db;</code> </li> <li><code>DELETE FROM alembic_version;</code> </li> <li>Restart the IRIS web app - your changes should be applied</li> </ul>"},{"location":"development/db_debug/","title":"DB Debug","text":"<p>In case a DB Debug with pgAdmin is needed, you need to follow this step :  </p> <p>In a terminal:</p> <p>This creates a new virtual environment as required.</p> <pre><code>1. sudo mkdir /var/lib/pgadmin\n2. sudo mkdir /var/log/pgadmin\n3. sudo chown $USER /var/lib/pgadmin\n4. sudo chown $USER /var/log/pgadmin\n5. python3 -m venv pgadmin4\n6. source pgadmin4/bin/activate\n7. (pgadmin4) $ pip install pgadmin4\n8. (pgadmin4) $ pgadmin4\nNOTE: Configuring authentication for SERVER mode.\n\nEnter the email address and password to use for the initial pgAdmin user account:\n\nEmail address: user@domain.com\nPassword: \nRetype password:\nStarting pgAdmin 4. Please navigate to http://127.0.0.1:5050 in your browser.\n* Serving Flask app \"pgadmin\" (lazy loading)\n* Environment: production\n  WARNING: Do not use the development server in a production environment.\n  Use a production WSGI server instead.\n* Debug mode: off\n</code></pre> <p>Then run, http://127.0.0.1:5050/browser/ in your browser.</p> <p>Follow the next steps, to add iris_db :</p> <pre><code>1. Click right on Servers&gt;New&gt;Server.\n2. Write a name for the server in \"General\".\n3. In \"Connexion\" write :\nhostname : localhost\nport : 5432\ndatabase : iris_db\nusername : postgres \n4. To finish click on save.\n</code></pre>"},{"location":"development/environment/","title":"Setup","text":"<p>It follows an issue raised on the Github of the project.  </p> <p>It recommends the use of a hybrid development environment, as most of the time only the web-app needs to be changed: </p> <ul> <li>Pycharm or any Python IDE for the web-app </li> <li>Docker for db, nginx, celery and worker. The three later are even optional if you don't develop modules. </li> </ul>"},{"location":"development/environment/#web-app","title":"Web-app","text":"<p>For the webapp configuration, you need to set the environment variable <code>POSTGRES_SERVER=127.0.0.1</code></p> <p>Then Pycharm need to be setup with a dedicated environment, by adding a new configuration:</p> <ul> <li>Script path : <code>source/run.py</code></li> <li>Python interpreter 3.9</li> <li>Working directory: <code>source</code></li> </ul> <p>To have pylint, right click on <code>source</code> in the directory tree and <code>mark directory as</code> &gt; <code>sources root</code>. The requirements then need to be installed. Pycharm should detect the requirements.txt and propose to install the dependencies.  Otherwise they can be installed with the following command (issued in the virtual environment) :  <code>pip3 install -r source\\requirements.txt</code></p>"},{"location":"development/environment/#run","title":"Run","text":"<ol> <li>Spin up the docker db <code>docker compose -f docker-compose.dev.yml up db</code></li> <li>Run the Pycharm configuration you created </li> <li>The interface should be accessible on http://127.0.0.1:8000 (and https://127.0.0.1:4433 if you started the nginx docker) </li> </ol> <p>IRIS can now be developed and debugged on the fly. </p>"},{"location":"development/environment/#tests-in-docker","title":"Tests in docker","text":"<p>Once the code is working by running on Pycharm, we highly recommend testing it on Docker. To do so, the app docker need to be erased and rebuilt.    </p> <ol> <li><code>docker-compose rm app</code></li> <li><code>docker-compose build app</code></li> <li><code>docker-compose up db app</code></li> </ol> <p>Development considerations  If the development results in DB modification, please use Alembic and add a migration script so users don't loose their data when they upgrade. </p>"},{"location":"development/hooks/","title":"Hooks","text":"<p>Introduced in IRIS v1.4.0</p> <p>Hooks are a mean for modules to react on specific events that occurs on IRIS. By subscribing to a hook, a module is automatically notified when the associated event occurs.  This offers a multitude of possibilities, from adding insight to IRIS objects, to pushing information to another platform or even changing how IRIS works.    </p>"},{"location":"development/hooks/#types","title":"Types","text":"<p>There are 3 types of hooks. </p> <ul> <li><code>On preload</code>: Triggered before an object is processed and committed to database. It is triggered right after a request is received, and the data associated with the hook is usually the request content itself.  In most of the cases, modules should not subscribe to these hooks. </li> <li><code>On postload</code>: Triggered after an object is processed and committed to database. It is triggered after IRIS processed the request and the data associated with the hook is usually a list of SqlAlchemy objects (such as IOC, Assets, etc). </li> <li><code>Manual</code>: Triggered by manual action of a user. When a module subscribes to these hooks, it needs to provide a \"menu option name\" which will be displayed to users. When they click this option, the associated hook is triggered for this module only. Multiple manual hooks can be registered for one module.  </li> </ul> <p>Danger</p> <p><code>on_preload</code> hooks must run synchronously, i.e not queued in RabbitMQ. This effectively blocks the current user request until the module finishes the processing. We highly recommend to only use <code>on_postload</code> hooks for a better user experience. These hooks are transparent for users and rely on already verified and committed data. Handling <code>on_preload</code> hooks implies the received data is unsafe - directly coming from remote clients - and the module needs to process the data as fast as possible. </p>"},{"location":"development/hooks/#subscribing-and-unsubscribing","title":"Subscribing and unsubscribing","text":"<p>Two methods are provided by <code>IrisModuleInterface</code> to subscribe and unsubscribe to hooks.   </p> <pre><code>  def register_to_hook(module_id: int, \n                       iris_hook_name: str, \n                       manual_hook_name: str = None, \n                       run_asynchronously: bool = True)\n\n  def deregister_from_hook(module_id: int, \n                           iris_hook_name: str)\n</code></pre> <p>The registration method expects the following arguments: </p> <ul> <li><code>module_id</code>: The ID of the calling module. This information is given by IRIS when the <code>register_hooks</code> method is called. </li> <li><code>iris_hook_name</code>: The name of the hook to which subscribe. This must be one of the hook listed in the section below. </li> <li><code>manual_hook_name</code>: The name of the UI menu that is provided to users if the registration concerns a manual hook. If nothing is provided, IRIS will create a name composed as follows: <code>&lt;module_name&gt;::&lt;hook_name&gt;</code>. This value is ignored if the signal is not manual.  </li> <li><code>run_asynchronously</code>: Set to True (default) to run the module in a RabbitMQ task upon hook triggering. If set to False, the module is called immediately, which have for effect to effectively block the current user request until the module finishes. This is the behavior to use for <code>on_preload</code> hooks. However, we strongly recommend the use of <code>on_postload</code> hooks to prevent any unwanted (see warning section above). </li> </ul> <p>The deregistration method expects the following arguments:  </p> <ul> <li><code>module_id</code>: The ID of the calling module. This information is given by IRIS when the <code>register_hooks</code> methods is called. </li> <li><code>iris_hook_name</code>: The name of the hook to which unsubscribe. If the module is not subscribed to the specified hook the function returns without errors. </li> </ul> <p>Please see the modules documentation for more details on how to implement these methods.  </p>"},{"location":"development/hooks/#available-hooks","title":"Available hooks","text":"<p>The following hooks are natively available for subscription.  </p> Hook name Description on_preload_case_create Triggered on case creation, before commit in DB on_postload_case_create Triggered on case creation, after commit in DB on_preload_case_delete Triggered on case deletion, before commit in DB on_postload_case_delete Triggered on case deletion, after commit in DB on_postload_case_update Triggered on case update, before commit in DB on_manual_trigger_case Triggered upon user action on_postload_alert_create Triggered on alert creation, after commit in DB on_postload_alert_update Triggered on alert update, after commit in DB on_postload_alert_delete Triggered on alert deletion, after commit in DB on_postload_alert_escalate Triggered on alert escalation, after commit in DB on_postload_alert_merge Triggered on alert merge, after commit in DB on_postload_alert_unmerge Triggered on alert unmerge, after commit in DB on_preload_asset_create Triggered on asset creation, before commit in DB on_postload_asset_create Triggered on asset creation, after commit in DB on_preload_asset_update Triggered on asset update, before commit in DB on_postload_asset_update Triggered on asset update, after commit in DB on_preload_asset_delete Triggered on asset deletion, before commit in DB on_postload_asset_delete Triggered on asset deletion, after commit in DB on_manual_trigger_asset Triggered upon user action on_preload_note_create Triggered on note creation, before commit in DB on_postload_note_create Triggered on note creation, after commit in DB on_preload_note_update Triggered on note update, before commit in DB on_postload_note_update Triggered on note update, after commit in DB on_preload_note_delete Triggered on note deletion, before commit in DB on_postload_note_delete Triggered on note deletion, after commit in DB on_manual_trigger_note Triggered upon user action on_preload_ioc_create Triggered on ioc creation, before commit in DB on_postload_ioc_create Triggered on ioc creation, after commit in DB on_preload_ioc_update Triggered on ioc update, before commit in DB on_postload_ioc_update Triggered on ioc update, after commit in DB on_preload_ioc_delete Triggered on ioc deletion, before commit in DB on_postload_ioc_delete Triggered on ioc deletion, after commit in DB on_manual_trigger_ioc Triggered upon user action on_preload_event_create Triggered on event creation, before commit in DB on_preload_event_duplicate Triggered on event duplication, before commit in DB. This event only received the event ID which will be duplicated on_postload_event_create Triggered on event creation, after commit in DB on_preload_event_update Triggered on event update, before commit in DB on_postload_event_update Triggered on event update, after commit in DB on_preload_event_delete Triggered on event deletion, before commit in DB on_postload_event_delete Triggered on event deletion, after commit in DB on_manual_trigger_event Triggered upon user action on_preload_evidence_create Triggered on evidence creation, before commit in DB on_postload_evidence_create Triggered on evidence creation, after commit in DB on_preload_evidence_update Triggered on evidence update, before commit in DB on_postload_evidence_update Triggered on evidence update, after commit in DB on_preload_evidence_delete Triggered on evidence deletion, before commit in DB on_postload_evidence_delete Triggered on evidence deletion, after commit in DB on_manual_trigger_evidence Triggered upon user action on_preload_task_create Triggered on task creation, before commit in DB on_postload_task_create Triggered on task creation, after commit in DB on_preload_task_update Triggered on task update, before commit in DB on_postload_task_update Triggered on task update, after commit in DB on_preload_task_delete Triggered on task deletion, before commit in DB on_postload_task_delete Triggered on task deletion, after commit in DB on_manual_trigger_task Triggered upon user action on_preload_global_task_create Triggered on global task creation, before commit in DB on_postload_global_task_create Triggered on global task creation, after commit in DB on_preload_global_task_update Triggered on task update, before commit in DB on_postload_global_task_update Triggered on global task update, after commit in DB on_preload_global_task_delete Triggered on task deletion, before commit in DB on_postload_global_task_delete Triggered on global task deletion, after commit in DB on_manual_trigger_global_task Triggered upon user action on_preload_report_create Triggered on report creation, before generation in DB on_postload_report_create Triggered on report creation, before download of the document on_preload_activities_report_create Triggered on activities report creation, before generation in DB on_postload_activities_report_create Triggered on activities report creation, before download of the document on_postload_asset_commented Triggered on asset comment, after commit in DB on_postload_asset_comment_update Triggered on asset comment update, after commit in DB on_postload_asset_comment_delete Triggered on asset comment deletion, after commit in DB on_postload_evidence_commented Triggered on evidence comment, after commit in DB on_postload_evidence_comment_update Triggered on evidence comment update, after commit in DB on_postload_evidence_comment_delete Triggered on evidence comment deletion, after commit in DB on_postload_task_commented Triggered on task comment, after commit in DB on_postload_task_comment_update Triggered on task comment update, after commit in DB on_postload_task_comment_delete Triggered on task comment deletion, after commit in DB on_postload_ioc_commented Triggered on ioc comment, after commit in DB on_postload_ioc_comment_update Triggered on ioc comment update, after commit in DB on_postload_ioc_comment_delete Triggered on ioc comment deletion, after commit in DB on_postload_event_commented Triggered on event comment, after commit in DB on_postload_event_comment_update Triggered on event comment update, after commit in DB on_postload_event_comment_delete Triggered on event comment deletion, after commit in DB on_postload_note_commented Triggered on note comment, after commit in DB on_postload_note_comment_update Triggered on note comment update, after commit in DB on_postload_note_comment_delete Triggered on note comment deletion, after commit in DB on_postload_alert_commented Triggered on alert comment, after commit in DB on_postload_alert_comment_update Triggered on alert comment update, after commit in DB on_postload_alert_comment_delete Triggered on alert comment deletion, after commit in DB"},{"location":"development/structure/","title":"Structure overview","text":""},{"location":"development/structure/#flask","title":"Flask","text":"<p>IRIS uses Flask for the web engine.  </p>"},{"location":"development/structure/#routes-and-blueprints","title":"Routes and blueprints","text":"<p>Each page and API endpoints (eg <code>/login</code>, <code>/dashboard</code>, <code>/case/assets/list</code>, etc) refers to a route in the IRIS Flask app. They define what the application should do when Flask receives a request on an URI. To keep structure in the projects, these routes are grouped by <code>Blueprints</code>. The Blueprints reflects the structure shown in the IRIS UI left menu. For instance there is a <code>case</code> and an <code>activities</code> Blueprint.  </p> <p>The Blueprints and thus routes are defined in <code>source &gt; app &gt; blueprints</code>.  All the blueprints are registered in <code>source &gt; app &gt; views.py</code>.  </p>"},{"location":"development/structure/#templates","title":"Templates","text":"<p>IRIS uses dynamic page templating when an URI is visited. These Jinja2 templates are filled at runtime with the needed information and then returned to the client.  Each route offering a page (i.e non-API endpoints) thus relies on a template. These are set in a folder named <code>templates</code> in each Blueprint. For instance, for the dashboard template : <code>source &gt; app &gt; blueprints &gt; dashboard &gt; templates &gt; index.html</code>.  </p>"},{"location":"development/structure/#static-contents","title":"Static contents","text":"<p>Static content is served from a common folder under <code>ui</code>.  It contains CSS, JS and images. These can be accessed by pages using <code>\"/static/assets/&lt;the-resource&gt;\"</code>.</p>"},{"location":"development/structure/#sqlalchemy","title":"SQLAlchemy","text":"<p>For the database management, the application uses SQLAlchemy with a PostgreSQL backend. There is - normally - no need to directly deal with PostgreSQL, everything goes through SQLAlchemy.  It provides a Python overlay which allows to talk to the DB with objects.   </p>"},{"location":"development/structure/#models","title":"Models","text":"<p>Each table of the app is defined by a model.  These are defined in <code>source &gt; app &gt; model</code>.  When IRIS starts, it looks for the already created tables and creates the missing ones if needed. If changes are done on a table or field, then a migration is needed. This is explained in Alembic migrations.  </p>"},{"location":"development/structure/#requests","title":"Requests","text":"<p>To help structuring the code, we are trying to move the DB code from the routes code. This is partially done and work in progress. If your route requests the DB, please put the DB code in <code>source &gt; app &gt; datamgmt</code>.  </p>"},{"location":"development/structure/#alembic","title":"Alembic","text":"<p>To apply schema migration without the need to rebuild the DB, IRIS uses Alembic. It allows to define migration scheme and IRIS calls it when it starts so users can upgrade without too much hassles. </p>"},{"location":"development/structure/#hooks-modules-and-tasks","title":"Hooks, modules and tasks","text":"<p>Modules are handled via tasks thanks to Celery and RabbitMQ. More info here and here. </p>"},{"location":"development/structure/#iris-startup","title":"IRIS startup","text":"<p>When starting-up, IRIS initiates a bunch of DB objects, whether it is started for the first time or just restarted. Objects already created are not recreated, but the missing ones are applied. This ensure a smooth migration between versions. These are defined in <code>source &gt; app &gt; post_init.py</code>.  The scripts also contains the code that runs th DB migration with Alembic.  </p>"},{"location":"development/ui/","title":"UI","text":"<p>Javascript, CSS and all static assets (images, fonts, ...) are located under <code>ui</code> folder.</p>"},{"location":"development/ui/#getting-started","title":"Getting Started","text":""},{"location":"development/ui/#requirements","title":"Requirements","text":"<ul> <li>Node.js</li> </ul>"},{"location":"development/ui/#quick-overview-of-tools","title":"Quick overview of tools","text":"<ul> <li>Vite</li> <li>Eslint</li> <li>Svelte</li> </ul>"},{"location":"development/ui/#development","title":"Development","text":"<p>First, we need to install dependencies: <pre><code>npm install\n</code></pre></p> <p>Then, we can build IRIS application and rebuild it on changes: <pre><code>npm run watch\n</code></pre></p> <p>To execute linting of source files: <pre><code>npm run lint\n</code></pre></p>"},{"location":"development/ui/#production","title":"Production","text":"<p>First, we need to install dependencies: <pre><code>npm ci\n</code></pre></p> <p>Then, we can build IRIS application: <pre><code>npm run build\n</code></pre></p>"},{"location":"development/ui/#project-structure","title":"Project Structure","text":"<p>Here are some of the most important directories under <code>ui</code> folder: - <code>src</code>: IRIS specific JS files. - <code>public</code>: Static assets such as images, fonts but also CSS and JS files from vendors (external libraries). - <code>dist</code>: The dist folder, short for distribution folder, is dynamically generated when running one of the build commands listed above. The generation is a two steps process: first, <code>public</code> folder is copied into <code>dist</code> then JS code is bundled from <code>src</code> and copied into <code>dist</code>.</p>"},{"location":"development/modules/","title":"Modules","text":""},{"location":"development/modules/#introduction","title":"Introduction","text":"<p>A DFIR-IRIS Module (DIM) is a Python package allowing to extend IRIS features.  DIMs are not running constantly and are only called following specific actions done by users. </p> <p>We distinct two types of modules: </p> <ul> <li><code>Pipeline modules</code>: Allow uploading and processing of evidences through modular pipelines (eg: EVTX parsing and injection into a database or data visualiser). These are called when a user queries <code>Update case</code> and select evidences to process. </li> <li><code>Processor modules</code>: Allow processing of IRIS data upon predefined actions / hooks. (eg: be notified when a new IOC is created and get VT/MISP insights for it). These are either called automatically upon specific events, or if a user manually triggers them. </li> </ul> <p>Except for some triggers for processor modules, all tasks provided by DIMs are run asynchronously in RabbitMQ tasks, so they don't impact the UI.  </p> <p>Both types of DIMs have the same structure, they only differ in their configurations and how they handle the data they receive. For that purpose, every DIM inherit from a common class named <code>IrisModuleInterface</code> - available here - which provides the basic structure and methods of a module. </p> <p>Hint</p> <p>To quickly start writing a new module, one can follow these tutorials.</p>"},{"location":"development/modules/#overview","title":"Overview","text":"<p>Modules are instantiated upon actions (hooks, triggers, user actions) and this occurs each time the said actions occur. It implies the initiation of a module has to be very quick. In most of the case, the <code>__init__</code> method should not even be overwritten.   </p> <p>They can live either in the worker or the web-app, depending on their type and action they are handling. They can also live in both. This implies multiple instances of the same module can run at the same time.  </p> <p>The graph below shows two modules of different types running in the worker and interacting with external elements.  </p> <p></p> <p>Modules don't have to handle the task creations or resource locks. This is handled by IRIS. They just need to process the data they received and return results in a predefined manner.   </p>"},{"location":"development/modules/#common-structure","title":"Common structure","text":"<p>The section below describes the common structure of modules. </p>"},{"location":"development/modules/#directory-structure","title":"Directory structure","text":"<pre><code>setup.py                # Setup configuration to build the module \nREADME.md               # README \niris_example_name       # Name of the package \n    __init__.py              # Declaration of the package and main class\n    IrisExampleConfig.py     # Configuration of the module to help keep the main file clean \n    IrisExampleInterface.py  # Main class of the module \n    module_helper            # Sub module containing the helper functions of the module \n      helper.py              # for instance access to ext resource, manipulation of data \n      helper2.py             # etc. \n</code></pre>"},{"location":"development/modules/#the-initpy-file","title":"The init.py file","text":"<p>Iris loads the modules dynamically. To do so, it needs to know the name of the main class of the module and relies on <code>__init__.py</code> to find this information.  </p> <pre><code>__iris_module_interface = \"IrisEXAMPLEInterface\"\n</code></pre> <p>Where <code>IrisEXAMPLEInterface</code> is the main class of the module and inherits of the base class <code>IrisModuleInterface</code>. </p> <p>Caution</p> <p>Failing to provide the main class in <code>__init__.py</code> or having the main class inherit from <code>IrisModuleInterface</code> will make IRIS fail each time  it attempts to load the module. </p>"},{"location":"development/modules/#the-module-configuration","title":"The module configuration","text":"<p>Iris needs to know what the module is doing and what services it is providing. This is done via the attributes of the main class (let's say <code>IrisEXAMPLEInterface</code>). The attributes are :</p> <ul> <li><code>_module_name</code> : string - \"human\" name presented to users. </li> <li><code>_interface_version</code> : float - version of <code>IrisModuleInterface</code> used. If the version is not supported, the server will refuse to register the module. </li> <li><code>_module_version</code> : float - version of the module itself to help users keep tracks of evolutions. </li> <li><code>_module_type</code>: string - Type of module. The available modules types are listed in <code>IrisModuleInterface.IrisModuleTypes</code></li> <li><code>_pipeline_support</code> : bool - should be set to True if it implements a pipeline process (aka module of type <code>pipeline_module</code>).</li> <li><code>_pipeline_info</code> : dict - contains the configuration of the pipeline. The following structure must be followed:</li> </ul> <pre><code>pipeline_info = {\n\n    # Name of the pipeline used for internal tracking. This \n    # must be unique among all modules so pick something really unique \n    \"pipeline_internal_name\": \"example_pipeline\",\n\n    # The name of the pipeline presented to the user. Use something \n    # that will help the users to identify the right pipeline\n    \"pipeline_human_name\": \"Example Pipeline\",\n\n    # Arguments presented to the users when they select the pipeline\n    \"pipeline_args\": [\n        ['some_index', 'required'],\n        ['example_argument', 'optional']\n    ]\n}\n</code></pre> <ul> <li><code>_module_configuration</code> : A list of dict. The list contains each field needed by the module. This list is shown in the Iris webpage of the module configuration. Each field in an entry is mandatory. </li> </ul> <pre><code>_module_configuration = [\n  {\n      \"param_name\": \"vt_api_key\",\n      \"param_human_name\": \"VT API Key\",\n      \"param_description\": \"Virus total API key\",\n      \"default\": None,\n      \"mandatory\": True,\n      \"type\": \"sensitive_string\"\n  },\n  {\n    \"param_name\": \"vt_key_is_premium\",\n    \"param_human_name\": \"VT Key is premium\",\n    \"param_description\": \"Set to True if the VT key is premium\",\n    \"default\": False,\n    \"mandatory\": True,\n    \"type\": \"bool\"\n  },\n  {\n      \"param_name\": \"vt_ip_assign_asn_as_tag\",\n      \"param_human_name\": \"Assign ASN tag to IP\",\n      \"param_description\": \"Assign a new tag to IOC IPs with the ASN fetched from VT\",\n      \"default\": True,\n      \"mandatory\": True,\n      \"type\": \"bool\"\n  }\n]\n</code></pre> <p>The above example results in the following.  </p> <p></p>"},{"location":"development/modules/quick_start/processor/","title":"Processor modules","text":"<p>In this tutorial, we demonstrate the steps to write a basic processor module which subscribes to a hook, and log what it receives when the hook is triggered. We will also add a configuration setting to offer our users the ability disable this feature.  </p> <p>We'll call it <code>IrisDummyModule</code>.  </p>"},{"location":"development/modules/quick_start/processor/#project-structure-overview","title":"Project structure overview","text":"<p>As described in the development module main page, the module should have the following structure.  </p> <pre><code>setup.py                # Setup configuration to build the module \nREADME.md               # README \niris_dummy_module       # Name of the package \n    __init__.py              # Declaration of the package and main class\n    IrisDummyConfig.py       # Configuration of the module to help keep the main file clean \n    IrisDummyModule.py    # Main class of the module \n</code></pre> <p>While the module could have only one main file <code>IrisDummyModule.py</code>, we recommend splitting its configuration into a new configuration file (here <code>IrisDummyConfig.py</code>) to keep the code clear.   </p> <p>There is no mandatory naming convention for the files or the class or the methods. We chose this one to keep things clear, and we recommend following the same. But it's up to you really. </p> <p>We will walk over these files one by one during this tutorial.  </p>"},{"location":"development/modules/quick_start/processor/#creating-the-interface","title":"Creating the interface","text":"<p>The interface is the code that talks with IRIS. It implements methods that call and are called by the server. It needs to inherit IrisModuleInterface class from the IrisModuleInterface package.  This module handles most of the methods needed by IRIS to recognize, set up and call the module.  By inheriting this class in our interface, we avoid writing that part ourselves.  </p> <p>Let's write our basic interface class.  The name of the file has to be the name of the main class, that's the only constraint. We'll see later on why.  </p> iris_dummy_module/IrisDummyModule.py<pre><code>#!/usr/bin/env python3\n\n# Import the IrisInterface class\nfrom iris_interface.IrisModuleInterface import IrisModuleInterface\n\n# Create our module class\nclass IrisDummyModule(IrisModuleInterface):\n    pass \n</code></pre> <p>That's it! Actually this class is not doing anything right now. We'll need to add a few methods to register our hook later.  </p> <p>But first we need to indicate to IRIS what is our main interface class. Remember, there is no convention restriction, so IRIS has no way to know which class it should instantiate to call our module.  </p> <p>To do so, we need to set a specific variable in our <code>__init__.py</code>.  </p> iris_dummy_module/__init__.py<pre><code># Set the __iris_module_interface variable to the name of our main class. \n# When IRIS instantiates the python module, it looks for \"module.__iris_module_interface\"\n# And then tries to instantiate the class \"__iris_module_interface.__iris_module_interface\", here 'IrisDummyModule.IrisDummyModule'. \n# That's why the python file must have the same name as the class.  \n\n__iris_module_interface = \"IrisDummyModule\"\n</code></pre> <p>Our module is now recognizable by IRIS  Pretty simple right? </p>"},{"location":"development/modules/quick_start/processor/#writing-the-configuration","title":"Writing the configuration","text":"<p>The next step is to describe what the module is doing, its name, its configuration, etc.  This is done by overwriting predefined variables of the <code>IrisModuleInterface</code> class.   </p> <p>Let's create our Python configuration file and go through each variables.  </p> iris_dummy_module/IrisDummyConfig.py<pre><code># Import the module types list,  so we can indicate the type of our module \nfrom iris_interface.IrisModuleInterface import IrisModuleTypes \n\n# Human name displayed in the GUI Manage &gt; Modules. This can be anything, \n# but try to put something meaningful, so users recognize your module. \nmodule_name = \"IrisDummy\"\n\n# Description displayed when editing the module configuration in the UI. \n# This can be anything, \nmodule_description = \"Provides a dummy module that replies to one hook\"\n\n# Set the interface version used. This needs to be the version of \n# the IrisModuleInterface package. This version is check by the server to\n# to ensure our module can run on this specific server \ninterface_version = 1.1\n\n# The version of the module itself, it can be anything \nmodule_version = 1.0\n\n# The type of the module, here processor \nmodule_type = IrisModuleTypes.module_processor\n\n# Our module is a processor type, so it doesn't offer any pipeline \npipeline_support = False\n\n# Provide no pipeline information as our module don't implement any \npipeline_info = {}\n\n# The configuration of the module that will be displayed and configurable \n# by administrators on the UI. This describes every parameter that can \n# be set. \nmodule_configuration = [\n    {\n        \"param_name\": \"log_received_hook\",\n\n        \"param_human_name\": \"Log received hook\",\n\n        \"param_description\": \"Logs a message upon hook receiving if set to true. Otherwise do nothing.\",\n\n        \"default\": True,\n\n        \"mandatory\": True,\n\n        \"type\": \"bool\"\n    }\n]\n</code></pre> <p>The module configuration parameters are the following :  </p> <ul> <li><code>param_name</code> : The internal parameter name. This will be used by the module itself to fetch the value when needed.</li> <li><code>param_human_name</code> : The name displayed on the UI for this specific parameter</li> <li><code>param_description</code>: A description explaining what this parameter is doing to help administrators</li> <li><code>default</code>: The default value of our parameter. Here we set to True, so after install our module is already configured and ready to log the hook. </li> <li><code>mandatory</code>:  Indicates whether the parameter is mandatory or not. If set to True  and no value is provided (either by admin or by default), the module is automatically disabled by IRIS</li> <li><code>type</code>: The type of parameter. Here a boolean, which will be rendered under the form of a checkbox.  </li> </ul> <p>A module can have as many parameters as it needs.  </p> <p>We now need to update our main class to set this configuration.  </p> iris_dummy_module/IrisDummyModule.py<pre><code>#!/usr/bin/env python3\n\n# Import the IrisInterface class\nfrom iris_interface.IrisModuleInterface import IrisModuleInterface\n\n# Create our module class\nclass IrisDummyModule(IrisModuleInterface):\n    # Set the configuration\n    _module_name = interface_conf.module_name\n    _module_description = interface_conf.module_description\n    _interface_version = interface_conf.interface_version\n    _module_version = interface_conf.module_version\n    _pipeline_support = interface_conf.pipeline_support\n    _pipeline_info = interface_conf.pipeline_info\n    _module_configuration = interface_conf.module_configuration\n    _module_type = interface_conf.module_type\n\n    pass \n</code></pre> <p>Done! The module is now providing enough information to IRIS, so it knows exactly what our module do and what needs to be called to run it.  </p> <p>However, our module is still doing nothing. Let's make it subscribe to an IRIS hook.  </p>"},{"location":"development/modules/quick_start/processor/#subscribing-to-a-hook","title":"Subscribing to a hook","text":"<p>Hooks allow to be notified by IRIS when a specific event occurs (IOC creation, deletion, etc). For a comprehensive description of hooks, please see the Hooks section of this documentation.  </p> <p>The registration (or subscription) to a hook occurs at two moments during the life of a module: </p> <ul> <li>When the module is added to IRIS </li> <li>When the configuration of the module is changed by an Admin. This allows dynamic subscription and deregistration of hooks depending on the config. </li> </ul> <p>These registration/deregistration events are triggered by IRIS, and are propagated to modules through the <code>IrisModuleInterface</code> method <code>register_hooks</code> [ref].  </p> <p>To register to a hook, we need to override this method and register our hook within this method.  To do so, <code>IrisModuleInterface</code> offers us another method <code>register_to_hook</code> [ref], which we can call for each hook we want to subscribe.  </p> <p>Here is a summary of the events:   </p> <ol> <li>IRIS calls <code>register_hooks</code> of our module. This indicates it is time for us to register our hooks.  </li> <li>Within this method, we call <code>register_to_hook</code> for each hook we want to subscribe</li> </ol> <p>Let's add this to our main class and register to the <code>on_postload_ioc_create</code>. This will notify use each time a new IOC is created and committed to the database. </p> iris_dummy_module/IrisDummyModule.py<pre><code>#!/usr/bin/env python3\n\n# Import the IrisInterface class\nfrom iris_interface.IrisModuleInterface import IrisModuleInterface\n\n\n# Create our module class\nclass IrisDummyModule(IrisModuleInterface):\n    # Set the configuration\n    _module_name = interface_conf.module_name\n    _module_description = interface_conf.module_description\n    _interface_version = interface_conf.interface_version\n    _module_version = interface_conf.module_version\n    _pipeline_support = interface_conf.pipeline_support\n    _pipeline_info = interface_conf.pipeline_info\n    _module_configuration = interface_conf.module_configuration\n    _module_type = interface_conf.module_type\n\n    def register_hooks(self, module_id: int):\n        \"\"\"\n        Called by IRIS indicating it's time to register hooks.  \n\n        :param module_id: Module ID provided by IRIS.\n        \"\"\"\n\n        # Call the hook registration method. We need to pass the \n        # the module_id to this method, otherwise IRIS won't know \n        # to whom associate the hook. \n        # The hook name needs to be a well known hook name by IRIS. \n        status = self.register_to_hook(module_id, iris_hook_name='on_postload_ioc_create')\n\n        if status.is_failure():\n            # If we have a failure, log something out \n            self.log.error(status.get_message())\n\n        else:\n            # Log that we successfully registered to the hook \n            self.log.info(f\"Successfully subscribed to on_postload_ioc_create hook\")\n</code></pre> <p>That's it!  Our module has now officially subscribed to a hook and will be notified each time an IOC is created.  </p> <p>So how the module is notified? Once again this is done by a method named <code>hooks_handler</code> [ref] that <code>IrisModuleInterface</code> provides, and we need to overwrite.  </p> <p>This method is called each time one of the event associated to the hook we subscribed is triggered. It provides the name of the hook and as well as the data associated to it.  By overwriting this method, we can process the hook and the data! </p> <p>We will add a condition in this method, that is if the administrator sets the module parameter <code>log_received_hook</code> to False, then the module won't log anything and simply return the data.    </p> <p>Hint</p> <pre><code>The current configuration of the module can be accessed with the attribute ``self._dict_conf``.\n</code></pre> iris_dummy_module/IrisDummyModule.py<pre><code>#!/usr/bin/env python3\n\n# Import the IrisInterface class\nfrom iris_interface.IrisModuleInterface import IrisModuleInterface\n\n\n# Create our module class\nclass IrisDummyModule(IrisModuleInterface):\n    # Set the configuration\n    _module_name = interface_conf.module_name\n    _module_description = interface_conf.module_description\n    _interface_version = interface_conf.interface_version\n    _module_version = interface_conf.module_version\n    _pipeline_support = interface_conf.pipeline_support\n    _pipeline_info = interface_conf.pipeline_info\n    _module_configuration = interface_conf.module_configuration\n    _module_type = interface_conf.module_type\n\n    def register_hooks(self, module_id: int):\n        \"\"\"\n        Called by IRIS indicating it's time to register hooks.  \n\n        :param module_id: Module ID provided by IRIS.\n        \"\"\"\n\n        # Call the hook registration method. We need to pass the \n        # the module_id to this method, otherwise IRIS won't know \n        # to whom associate the hook. \n        # The hook name needs to be a well known hook name by IRIS. \n        status = self.register_to_hook(module_id, iris_hook_name='on_postload_ioc_create')\n\n        if status.is_failure():\n            # If we have a failure, log something out \n            self.log.error(status.get_message())\n\n        else:\n            # Log that we successfully registered to the hook \n            self.log.info(f\"Successfully subscribed to on_postload_ioc_create hook\")\n\n\ndef hooks_handler(self, hook_name: str, data):\n    \"\"\"\n    Called by IRIS each time one of our hook is triggered. \n    \"\"\"\n\n    # read the current configuration and only log the call if \n    # our parameter is set to true \n    if self._dict_conf.get('log_received_hook') is True:\n        self.log.info(f'Received {hook_name}')\n        self.log.info(f'Received data of type {type(data)}')\n\n    # Return a standardized message to IRIS saying that everything is ok. \n    # logs=list(self.message_queue) is needed, so the users can see the logs \n    # our module generated during its execution.  \n    return InterfaceStatus.I2Success(data=data, logs=list(self.message_queue))\n</code></pre> <p>We are done! Our module is now fully ready to register, subscribe to a hook and act when notified.  </p>"},{"location":"development/modules/quick_start/processor/#installing-and-registering-the-module","title":"Installing and registering the module","text":"<p>We need now need to build and install the module. To do so, you'll need this script and an IRIS docker instance running on the same machine.  </p> <p>The script will build the module, copy it to the docker instances, install it within them and restart the dockers.  </p> <ol> <li>From within the root directory of the module, paste the script </li> <li>Make it executable <code>chmox +x buildnpush2iris.sh</code> </li> <li>Execute it <code>./buildnpush2iris.sh -a</code> </li> </ol> <p>The module should now be installed. We can register it in IRIS as explained here. </p>"},{"location":"operations/alerts/","title":"Alerts","text":"<p>Introduced in IRIS v2.1.0</p> <p>Alerts can be fed directly into IRIS using the Alerts API.  Any source can inject alerts into IRIS, as long as it can send HTTP requests and respects the alert format.    </p> <p>A service account with the <code>alerts_read</code> and <code>alerts_write</code> permission can be used to send alerts to IRIS.  </p> <p>Warning</p> <p>This section is only available for users with the <code>alerts_read</code> and <code>alerts_write</code> permissions.  </p> <p>Warning</p> <p>Starting from IRIS v2.4.7, users who want to see the alerts must be associated with one or more corresponding customer. This is done in the Access Control section.</p>"},{"location":"operations/alerts/#viewing-alerts","title":"Viewing alerts","text":"<p>Alerts can then be viewed in the <code>Alerts</code> section of IRIS. Analysts can then triage the alerts and create cases from them.   </p> <p></p> <p>Each alert can be expanded to show more details.  </p>"},{"location":"operations/alerts/#alerts-assignment","title":"Alerts assignment","text":"<p>Alerts can be assigned to analysts. This can be done directly from the alert view.  </p> <p>To self-assign an unassigned alert, click on the hand icon on the left. </p> <p></p> <p>Clicking again on the hand icon will prompt with a list of analysts to assign the alert to.  </p> <p>The right button <code>Assign</code>, when hovering above an alert, can also be used to assign the alert to an analyst.</p>"},{"location":"operations/alerts/#merge-escalation-operations","title":"Merge / escalation operations","text":""},{"location":"operations/alerts/#creating-cases-from-alerts","title":"Creating cases from alerts","text":"<p>Alerts can be escalated/merged into a new case. When hovering above an alert, a <code>Merge</code> button will appear.  </p> <p></p> <p>Once clicked, a new window appears, requesting additional information.  In this window, the analyst can: </p> <ul> <li>Set the name of the case </li> <li>Select the case template</li> <li>Select the IOCs to import </li> <li>Select the assets to import</li> <li>Add an escalation note</li> <li>Set the case tags </li> <li>Choose if the alert should be imported in the timeline as an event  </li> </ul>"},{"location":"operations/alerts/#merge-alerts-into-an-existing-case","title":"Merge alerts into an existing case","text":"<p>Alerts can also be escalated/merged into an existing case. When hovering above an alert, a <code>Merge</code> button will appear.  </p> <p>Once clicked, a new window appears requesting additional information.  The button <code>Merge into existing case</code> needs to be clicked.  A new dropdown appears and allows to select the case to merge the alert into.   </p> <p>Similar to the case creation, the analyst can: </p> <ul> <li>Select the IOCs to import</li> <li>Select the assets to import</li> <li>Add an escalation note</li> <li>Choose if the alert should be imported in the timeline as an event</li> </ul> <p>The selected IOCs and assets are then added to the selected case.  </p>"},{"location":"operations/alerts/#unmerge-alerts-from-a-case","title":"Unmerge alerts from a case","text":"<p>Alerts can be unmerged from a case. </p> <p>Info</p> <p>When unmerging an alert, the alert is not deleted. It is only removed from the case. The alert state is not changed. The IOCs and assets are not removed from the case.  </p> <p>When a case is merged, a new link appears on the alert and mentions the case it was merged into. Clicking on this link allows to browse the case or to unmerge the alert. </p> <p></p>"},{"location":"operations/alerts/#alerts-relationships","title":"Alerts relationships","text":"<p>Each alert have a <code>Relastionships</code> section. This section shows the relationships between the alert and other objects in IRIS. This feature is in preview and might report false relationships.   </p> <p>The relationships are computed using the following logic:</p> <ul> <li>Same IOC, based on the IOC type and value</li> <li>Same Asset, based on the asset type and name </li> </ul> <p>By default the view limits the relationships to 100 nodes and looks back 7 days. This can be updated directly in the alert view.  </p> <p></p>"},{"location":"operations/api/","title":"API","text":"<p>IRIS is designed to be flexible and can easily integrate with existing environments through its extensive REST API. With the REST API, you can perform almost all tasks that are possible using the web interface. In fact, the web interface itself communicates with the API for various operations. </p> <p>The API endpoints are accessible via the same port as the web interface by default, which is 443 using HTTPS protocol. This means you can seamlessly interact with IRIS through APIs and web interfaces based on your requirements.  </p> <p>Hint</p> <p>A Python client is available here to ease the automation.  </p>"},{"location":"operations/api/#api-keys","title":"API Keys","text":"<p>The first step is to obtain an API key. Each user is automatically attributed one when it is created. It can be found on the left panel, under username and <code>My Settings</code>. </p> <p></p> <p>Token exposure</p> <p>In case the token is exposed and needs to be changed, a new one can be generated with the <code>Renew</code> option. Renewing a token revokes the previous. </p>"},{"location":"operations/api/#references","title":"References","text":"<p>The API constantly evolves with IRIS and thus multiple versions exists. Use the references below to check which API version applies to your IRIS version.  Starting from IRIS v1.4.0, the supported API version can also be checked in the UI <code>Advanced</code> &gt; <code>Server settings</code>.</p> IRIS Version API Version &amp; Reference v1.2.0 API v1.0.0 v1.2.1 API v1.0.0 v1.3.0 API v1.0.1 v1.3.1 API v1.0.1 v1.4.0 API v1.0.2 v1.4.1 API v1.0.2 v1.4.2 API v1.0.2 v1.4.3 API v1.0.3 v1.4.4 API v1.0.3 v1.4.5 API v1.0.3 v2.0.x API v2.0.0 v2.1.x API v2.0.1 v2.2.x API v2.0.1 v2.3.x API v2.0.2 v2.4.x API v2.0.4"},{"location":"operations/api/#how-to-use","title":"How to use","text":"<p>The API token is used as a Bearer and needs to be present in the header <code>Authorization</code> when issuing requests.  For example, to list all the cases: </p> <pre><code>   curl --request GET \\\n  --url http://&lt;yourserver_ip&gt;/manage/cases/list?cid=1 \\\n  --header 'Authorization: Bearer mWpCUVNzBMU5EnbIAK50jLPhYjKBTHZjobdogc_n_yixpJTmt9tzAf8WYDI7m5XgB9wCJnlaXlHIh9RZjtp2fA' \\\n  --header 'Content-Type: application/json'\n</code></pre> <p>The only way to revoke a token is to renew the current one. Once done, the previous API token does not exist anymore in the database and it becomes ineffective. </p>"},{"location":"operations/case_templates/","title":"Case templates","text":"<p>Introduced in IRIS v2.1.0</p> <p>Case templates are a way to pre-configure a case with a set of predefined informations. The case templates can be managed in <code>Advanced</code> &gt; <code>Case templates</code>.   </p> <p>Info</p> <p>This section is only available for users with the administrator role. </p> <p>Case templates are made of a set of informations that will be used to pre-fill the case creation form. The following elements can be set: </p> <ul> <li>Title prefix: A prefix to add to case title,</li> <li>Summary: content to prefill the summary,</li> <li>Classification: The classification of the case. Should be a lowercase name matching an existing classification in IRIS,</li> <li>Tags: A list of case tags,</li> <li>Tasks: A list of dictionaries defining tasks. Tasks are defined by title (required), description, and list of tags,</li> <li>Notes: A list of dictionaries defining note directories. Note directories are defined by title (required), and list of notes. Notes have title (required) and content</li> </ul> <p>Looking for case templates?</p> <p>We are providing a set of case templates in the IRIS Resources repository. </p>"},{"location":"operations/case_templates/#structure-of-templates","title":"Structure of templates","text":"<p>The following defines the structure of a case template: </p> <pre><code>{\n    \"name\": \"ransomware_infection\",\n    \"display_name\": \"Ransomware Infection Template\",\n    \"description\": \"This case template describes first-response tasks to handle information system compromised by a ransomware.\",\n    \"author\": \"DFIR-IRIS\",\n    \"classification\": \"malicious-code:ransomware\",\n    \"title_prefix\": \"[RANS]\",\n    \"summary\": \"# Context \\n\\n\\n# Contact \\n\\n\\n# Actions \\n\\n\\n\",\n    \"tags\": [\"ransomware\",\"malware\"],\n    \"tasks\": [\n        {\n            \"title\": \"Identify the perimeter\",\n            \"description\": \"The perimeter of compromise must be identified\",\n            \"tags\": [\"identify\"]\n        },\n        {\n            \"title\": \"Collect compromised hosts\",\n            \"description\": \"Deploy Velociraptor and start collecting evidence\",\n            \"tags\": [\"collect\", \"velociraptor\"]\n        },\n        {\n            \"title\": \"Containment\"\n        }\n    ],\n    \"note_directories\": [\n        {\n            \"title\": \"Identify\",\n            \"notes\": [\n                {\n                    \"title\": \"Identify the compromised accounts\",\n                    \"content\": \"# Observations\\n\\n\"\n                }\n            ]\n        },\n        {\n            \"title\": \"Collect\",\n            \"notes\": [\n                {\n                    \"title\": \"Velociraptor deployment\"\n                },\n                {\n                    \"title\": \"Assets collected\",\n                    \"content\": \"# Assets collected\\n\\n# Assets not collected\"\n                }\n            ]\n        }\n    ]\n}\n</code></pre>"},{"location":"operations/case_templates/#using-case-templates","title":"Using case templates","text":"<p>Case templates can be used when creating a new case. On the UI, when creating a case, select the case template to use in the <code>Case template</code> dropdown. The case will then automatically use the informations defined in the template.  </p>"},{"location":"operations/configuration/","title":"Configuration","text":"<p>The entire configuration is done through the <code>.env</code> file at the root of the IRIS directory.  </p>"},{"location":"operations/configuration/#default-configuration","title":"Default configuration","text":"<p>The default configuration is provided through a <code>.env.model</code> file at the root of the IRIS directory. One need to copy this file to <code>.env</code> and modify it if needed.  </p> <p>The default configuration is suitable for testing only.  See the section below to configure IRIS for production.  </p>"},{"location":"operations/configuration/#production-configuration","title":"Production configuration","text":""},{"location":"operations/configuration/#secrets","title":"Secrets","text":""},{"location":"operations/configuration/#required-changes","title":"Required changes","text":"<p>The following secrets in the <code>.env</code> need to be changed for production. We recommend using OpenSSL to generate different values from each secret:  <code>openssl rand -base64 64</code></p> <ul> <li><code>POSTGRES_PASSWORD</code>: Password of the postgres user</li> <li><code>POSTGRES_ADMIN_PASSWORD</code>: Password of the db admin user </li> <li><code>IRIS_SECRET_KEY</code>: Key used by Flask to secure the session cookies</li> <li><code>IRIS_SECURITY_PASSWORD_SALT</code>: A salt used for password encryption in the DB </li> </ul> <p>Make sure the DB password does not contain symbols that could be interpreted as an DB url (i.e <code>#</code> and <code>@</code>). </p> <p>Critical configuration</p> <p>These settings are critical and need to be set properly otherwise authentication bypass may occur. </p>"},{"location":"operations/configuration/#optionnal-changes","title":"Optionnal changes","text":"<p>To automate the provisionning of IRIS, one might need to set the default administrator API token and password. This can be achieve with the following environment variables.  If those variables are not set, random ones are generated during the very first boot of the application.   </p> <p>Warning</p> <p>The administrator password is printed in the logs. It is recommended to change it as soon as possible. The set of the following environment variables has no effect once the administrator account is created, i.e after the very first boot.</p> <ul> <li><code>IRIS_ADM_PASSWORD</code>: Password of the administrator account. The password need to match the default password policy or the administrator won't be able to login,  </li> <li><code>IRIS_ADM_API_KEY</code>: API key of the administrator. A random long string. No verification for the complexity is done. We recommend using <code>openssl rand -base64 64</code></li> </ul>"},{"location":"operations/configuration/#certificates","title":"Certificates","text":"<p>IRIS is configured to use a self-signed certificate by default. This is suitable for testing only.  To use your own certificate, you need to set the following environment variables:  </p> <ul> <li><code>KEY_FILENAME</code>: The filename of the key file in the <code>certificates/web_certificates</code> directory at the root of the IRIS directory</li> <li><code>CERT_FILENAME</code>: The filename of the certificate file in the <code>certificates/web_certificates</code> directory at the root of the IRIS directory</li> </ul> <p>Once the changes are done, nginx docker container need to be rebuilt with the following command:</p> <pre><code>docker-compose stop nginx\ndocker-compose build nginx --no-cache\ndocker-compose up \n</code></pre>"},{"location":"operations/configuration/#authentication","title":"Authentication","text":""},{"location":"operations/configuration/#ldap","title":"LDAP","text":"<p>IRIS can be configured to use LDAP authentication. See the Authentication section for more details.</p>"},{"location":"operations/configuration/#available-settings","title":"Available settings","text":"<p>These environment variables are availabled to be set.  </p> Key Section Opt Description <code>SERVER_NAME</code> Nginx No Passed to the server_name in NGINX configuration <code>KEY_FILENAME</code> Nginx No SSL Cert key filename passed to the NGINX configuration <code>CERT_FILENAME</code> Nginx No SSL Cert filename passed to the NGINX configuration <code>INTERFACE_HTTPS_PORT</code> Nginx Yes Listening interface of IRIS <code>POSTGRES_USER</code> DB No Name of the POSTGRES user <code>POSTGRES_PASSWORD</code> DB No Password of the POSTGRES user <code>POSTGRES_ADMIN_USER</code> DB No Name of the admin user <code>POSTGRES_ADMIN_PASSWORD</code> DB No Password of the ADMIN user <code>POSTGRES_DB</code> DB No Name of the DB used by IRIS <code>POSTGRES_SERVER</code> DB No Hostname or IP of the DB <code>POSTGRES_PORT</code> DB No Port of the DB server <code>DOCKERIZED</code> IRIS Yes Set to <code>1</code> when using dockers (default) <code>IRIS_SECRET_KEY</code> IRIS No Secret key used to secure sessions - needs to be random <code>IRIS_SECURITY_PASSWORD_SALT</code> IRIS No Secret used to salt the passwords in DB - needs to be random <code>IRIS_UPSTREAM_SERVER</code> IRIS No WebApp upstream server - used to configure nginx reverse proxy <code>IRIS_UPSTREAM_PORT</code> IRIS No WebApp upstream server port - used to configure nginx reverse proxy <code>IRIS_ORGANISATION_NAME</code> IRIS No Name of the company / organisation. Used on the UI <code>IRIS_LOGIN_BANNER_TEXT</code> IRIS No Text displayed on the login page <code>IRIS_LOGIN_PTFM_CONTACT</code> IRIS No Contact information displayed on the login page <code>IRIS_UPLOADED_PATH</code> IRIS No Path to store uploaded data. <code>IRIS_BACKUP_PATH</code> IRIS No Path to store backup files. <code>IRIS_TEMPLATES_PATH</code> IRIS No Path of the templates <code>IRIS_DATASTORE_PATH</code> IRIS No Path of the datastore files <code>IRIS_DEMO_ENABLED</code> Demo No Set to True to switch IRIS to Demo mode <code>IRIS_DEMO_DOMAIN</code> Demo No URL of the demonstration server <code>IRIS_DEMO_USER_SEED</code> Demo No Random seed to generate demo users <code>IRIS_DEMO_ADM_SEED</code> Demo No Random seed to generate admin users for demo <code>CELERY_BROKER</code> Celery No Broker URL used to handle IRIS tasks <code>IRIS_AUTHENTICATION_TYPE</code> Auth No IRIS auth mode : <code>local</code> or <code>ldap</code> <code>IRIS_ADM_PASSWORD</code> Auth Yes Set to use as initial password of the administrator account. Only works for the very first run of IRIS. Needs to match the password policy <code>IRIS_ADM_API_KEY</code> Auth Yes Set to use as initial API Key of the administrator <code>IRIS_ADM_EMAIL</code> Auth Yes Set to use as initial email of the administrator <code>IRIS_ADM_USERNAME</code> Auth Yes Set to use as initial username of the administrator <code>LDAP_SERVER</code> Auth Yes LDAP server IP or domain <code>LDAP_PORT</code> Auth Yes LDAP server port <code>LDAP_USER_PREFIX</code> Auth Yes Prefix to search the users within <code>LDAP_USER_SUFFIX</code> Auth Yes Suffix to search the users within <code>LDAP_USE_SSL</code> Auth Yes Set to True to use LDAPS <code>LDAP_VALIDATE_CERTIFICATE</code> Auth Yes Set to True to verify the server certificate validity <code>LDAP_TLS_VERSION</code> Auth Yes TLS version to use LDAPS <code>LDAP_SERVER_CERTIFICATE</code> Auth Yes Path of the LDAP server certificate <code>LDAP_PRIVATE_KEY</code> Auth Yes Path of the LDAP private certificate <code>LDAP_PRIVATE_KEY_PASSWORD</code> Auth Yes Password of the private key <code>LDAP_AUTHENTICATION_TYPE</code> Auth Yes Simple, SASL or NTLM <code>LDAP_CUSTOM_TLS_CONFIG</code> Auth Yes If set to true, the TLS configuration is not set by IRIS and taken from the defined environment. Default to False <code>OIDC_ISSUER_URL</code> Auth Yes The URL of the OIDC issuers <code>OIDC_CLIENT_ID</code> Auth Yes The unique identifier for your client in the OIDC system <code>OIDC_CLIENT_SECRET</code> Auth Yes Your client's secret key for OAuth 2.0 authentication <code>OIDC_AUTH_ENDPOINT</code> Auth Yes The endpoint for initiating the OIDC authentication flow <code>OIDC_TOKEN_ENDPOINT</code> Auth Yes The endpoint to exchange an authorization grant for a token <code>OIDC_END_SESSION_ENDPOINT</code> Auth Yes The endpoint that tells the OpenID Provider to end the session <code>OIDC_SCOPES</code> Auth Yes Comma-separated list of scopes for your OIDC application <code>OIDC_MAPPING_USERNAME</code> Auth Yes The attribute name or mapping for the username in IRIS <code>OIDC_MAPPING_EMAIL</code> Auth Yes The attribute name or mapping for email in IRIS"},{"location":"operations/custom_attributes/","title":"Custom Attributes","text":"<p>Introduced in IRIS v1.4.0</p> <p>All the case objects can be extended with custom attributes. These attributes can be added by : </p> <ul> <li>Administrators via the GUI </li> <li>Modules (for instance, the VT module adds a <code>VT Report</code> attribute to each objects it analyses)</li> </ul> <p>Attributes offer the ability to :</p> <ul> <li>Add inputs for analysts to fill additional details </li> <li>Add static/dynamic content such as HTML/JS for enhanced possibilities.  </li> </ul> <p>This section only describes how an administrator can add or delete attributes to an object.  </p> <p>Tip</p> <p>We have publish a detailed article of custom attributes with advanced usage on our blog. </p>"},{"location":"operations/custom_attributes/#management-page","title":"Management page","text":"<p>Custom attributes can be changed in the <code>Advanced</code> &gt; <code>Custom Attributes</code> section on the left panel. </p> <p></p> <p>The page lists the objects for which custom attributes can be added or modified. </p> <ul> <li>Cases </li> <li>Customers</li> <li>Evidences </li> <li>Notes</li> <li>Tasks</li> <li>Assets</li> <li>Events </li> <li>IOC </li> </ul>"},{"location":"operations/custom_attributes/#attributes-structure","title":"Attributes structure","text":"<p>Attributes are defined in JSON which describes tabs and fields that makes the attributes.    </p> <pre><code>  {\n      \"Tab Name 1\": {                     // Defines a new tab \n          \"Field 1\": {                    // Defines a new field within the Tab Name 1\n              \"type\": \"input_string\",     // Defines the type of field, here a standard string input\n              \"mandatory\": true,          // Indicates whether the field is mandatory upon saving\n              \"value\": \"\"                 // Default value if any, else empty\n          },\n          \"Field 2\": {                    // Defines a second field within the tab Tab Name 1\n              \"type\": \"input_checkbox\",   // Defines an input checkbox\n              \"mandatory\": false,         // Indicates whether the field is mandatory upon saving\n              \"value\": false              // Default value - must be set for booleans\n          }\n      },\n      \"VT report\": {                      // Defines a second tab named VT report\n          \"Content\": {                    // Defines a new field Content within the VT Report\n              \"type\": \"html\",             // Defines an HTML interpreted content\n              \"value\": \"\"                 // Default value if any, else empty\n          }\n      }\n  }\n</code></pre> <p>The code above would be rendered as : </p> <p></p> <p>With : </p> <ol> <li>The native information of the object. This cannot be changed or updated</li> <li>The new attribute <code>Tab Name 1</code> </li> <li>The other new attribute <code>VT report</code></li> </ol>"},{"location":"operations/custom_attributes/#attributes-taxonomy","title":"Attributes taxonomy","text":"<p>The available fields type are available for rendering : </p> <ul> <li><code>input_string</code>: Standard input text</li> <li><code>input_textfield</code>: Standard input textfield</li> <li><code>input_checkbox</code>: Standard checkbox</li> <li><code>input_date</code>: Standard date input</li> <li><code>input_datetime</code>: Standard date and time input</li> <li><code>input_select</code>: Standard select input. Need \"options\" tag to describe the available options, as a list of string. </li> <li><code>raw</code>: A static content rendered in raw text. HTML is not be interpreted.</li> <li><code>html</code>: A static content rendered as HTML. This is by nature prone to abuse, but at the same time allows adding custom JS scripts. </li> </ul>"},{"location":"operations/custom_attributes/#updating-resetting-attributes","title":"Updating / resetting attributes","text":"<p>When an attribute is updated, it will try to update all the existing objects with the new attributes. To prevent any data loss from previous attributes and attributes pushed by modules, the update is only made on attributes which don't have any values set or are type-compatibles (ie string to textfield).  </p> <p>The migration of an attribute can however be forced in two ways, both resulting in potential attributes data loss.  </p> <p>Good to know</p> <p>Migrating or overwriting attributes never change the native information of an object. It only applies to custom attributes.  </p> <p><code>Partial overwrite</code> basically resets all the values of every target objects that matches the current attribute definition. All associated values are lost. This does not impact attributes pushed by modules or previous configuration.</p> <p><code>Complete overwrite</code> resets all attributes of every target objects, including the ones created by modules, and then applies the current attributes. All associated values are lost.</p>"},{"location":"operations/custom_attributes/#example","title":"Example","text":"<p>Custom attributes can be more complex than what presented above. With the <code>html</code> type, it is possible to build almost anything. Below is an example of the custom attributes used in the IrisVT module. The <code>{{ }}</code> are used withing the module to generates the page with data received from VT.  </p> <p>Note : This example won't work as is, the value field is expanded here for reability.  </p> IrisVT default custom attribute<pre><code>{\n    \"VT report\": {                      \n        \"Content\": {                    \n            \"type\": \"html\",             \n            \"value\": \"&lt;div class='row'&gt;\n                    &lt;div class='col-12'&gt;\n                        &lt;h3&gt;Basic information&lt;/h3&gt;\n                        &lt;dl class='row'&gt;\n                            {% if results.as_owner %}\n                            &lt;dt class='col-sm-3'&gt;AS owner&lt;/dt&gt;\n                            &lt;dd class='col-sm-9'&gt;{{ results.as_owner }}&lt;/dd&gt;\n                            {% endif %}\n\n                            {% if country %}\n                            &lt;dt class='col-sm-3'&gt;Country&lt;/dt&gt;\n                            &lt;dd class='col-sm-9'&gt;{{ results.country }}&lt;/dd&gt;\n                            {% endif %}\n                        &lt;/dl&gt;\n                    &lt;/div&gt;\n                &lt;/div&gt;    \n\n                {% if nb_detected_urls %}\n                &lt;div class='row'&gt;\n                    &lt;div class='col-12'&gt;\n                        &lt;h3&gt;Detected URLS&lt;/h3&gt;\n                        &lt;dl class='row'&gt;\n                            &lt;dt class='col-sm-3'&gt;Total detected URLs&lt;/dt&gt;\n                            &lt;dd class='col-sm-9'&gt;{{ nb_detected_urls }}&lt;/dd&gt;\n\n                            &lt;dt class='col-sm-3'&gt;Average detection ratio&lt;/dt&gt;\n                            &lt;dd class='col-sm-9'&gt;{{ avg_urls_detect_ratio }}&lt;/dd&gt;\n                        &lt;/dl&gt;\n                    &lt;/div&gt;\n                &lt;/div&gt;    \n                {% endif %}\n\n                {% if nb_detected_samples %}\n                &lt;div class='row'&gt;\n                    &lt;div class='col-12'&gt;\n                        &lt;h3&gt;Detected communicating samples&lt;/h3&gt;\n                        &lt;dl class='row'&gt;\n                            &lt;dt class='col-sm-3'&gt;Total detected samples&lt;/dt&gt;\n                            &lt;dd class='col-sm-9'&gt;{{ nb_detected_samples }}&lt;/dd&gt;\n\n                            &lt;dt class='col-sm-3'&gt;Average detection ratio&lt;/dt&gt;\n                            &lt;dd class='col-sm-9'&gt;{{ avg_samples_detect_ratio }}&lt;/dd&gt;\n                        &lt;/dl&gt;\n                    &lt;/div&gt;\n                &lt;/div&gt;    \n                {% endif %}\n\n                &lt;div class='row'&gt;\n                    &lt;div class='col-12'&gt;\n                        &lt;div class='accordion'&gt;\n                            &lt;h3&gt;Additional information&lt;/h3&gt;\n\n                            {% if results.resolutions %}\n                            &lt;div class='card'&gt;\n                                &lt;div class='card-header collapsed' id='drop_res' data-toggle='collapse' data-target='#drop_resolutions' aria-expanded='false' aria-controls='drop_resolutions' role='button'&gt;\n                                    &lt;div class='span-icon'&gt;\n                                        &lt;div class='flaticon-file'&gt;&lt;/div&gt;\n                                    &lt;/div&gt;\n                                    &lt;div class='span-title'&gt;\n                                        Resolutions history\n                                    &lt;/div&gt;\n                                    &lt;div class='span-mode'&gt;&lt;/div&gt;\n                                &lt;/div&gt;\n                                &lt;div id='drop_resolutions' class='collapse' aria-labelledby='drop_res' style=''&gt;\n                                    &lt;div class='card-body'&gt;\n                                        &lt;ul&gt;\n                                            {% for resolution in results.resolutions %} \n                                            &lt;li&gt;{{ resolution.hostname }} ( Last resolved on {{resolution.last_resolved}} )&lt;/li&gt;\n                                            {% endfor %}\n                                        &lt;/ul&gt;\n                                    &lt;/div&gt;\n                                &lt;/div&gt;\n                            &lt;/div&gt;\n                            {% endif %}\n\n                        &lt;/div&gt;\n                    &lt;/div&gt;\n                &lt;/div&gt;\n\n                &lt;div class='row'&gt;\n                    &lt;div class='col-12'&gt;\n                        &lt;div class='accordion'&gt;\n                            &lt;h3&gt;Raw report&lt;/h3&gt;\n\n                            &lt;div class='card'&gt;\n                                &lt;div class='card-header collapsed' id='drop_r' data-toggle='collapse' data-target='#drop_raw' aria-expanded='false' aria-controls='drop_raw' role='button'&gt;\n                                    &lt;div class='span-icon'&gt;\n                                        &lt;div class='flaticon-file'&gt;&lt;/div&gt;\n                                    &lt;/div&gt;\n                                    &lt;div class='span-title'&gt;\n                                        Raw report\n                                    &lt;/div&gt;\n                                    &lt;div class='span-mode'&gt;&lt;/div&gt;\n                                &lt;/div&gt;\n                                &lt;div id='drop_raw' class='collapse' aria-labelledby='drop_r' style=''&gt;\n                                    &lt;div class='card-body'&gt;\n                                        &lt;div id='vt_raw_ace'&gt;{{ results| tojson(indent=4) }}&lt;/div&gt;\n                                    &lt;/div&gt;\n                                &lt;/div&gt;\n                            &lt;/div&gt;\n                        &lt;/div&gt;\n                    &lt;/div&gt;\n                &lt;/div&gt; \n                &lt;script&gt;\n                var vt_in_raw = ace.edit('vt_raw_ace',\n                {\n                    autoScrollEditorIntoView: true,\n                    minLines: 30,\n                });\n                vt_in_raw.setReadOnly(true);\n                vt_in_raw.setTheme('ace/theme/tomorrow');\n                vt_in_raw.session.setMode('ace/mode/json');\n                vt_in_raw.renderer.setShowGutter(true);\n                vt_in_raw.setOption('showLineNumbers', true);\n                vt_in_raw.setOption('showPrintMargin', false);\n                vt_in_raw.setOption('displayIndentGuides', true);\n                vt_in_raw.setOption('maxLines', 'Infinity');\n                vt_in_raw.session.setUseWrapMode(true);\n                vt_in_raw.setOption('indentedSoftWrap', true);\n                vt_in_raw.renderer.setScrollMargin(8, 5);\n                &lt;/script&gt;\"                 \n        }\n    }\n}\n</code></pre>"},{"location":"operations/datastore/","title":"Datastore","text":"<p>Introduced in IRIS v1.4.5</p> <p>The datastore offers a way to store files directly in the context of a case. Documents, IOCs, evidences, etc, anything can be uploaded and managed through IRIS.  </p>"},{"location":"operations/datastore/#accessing-the-datastore","title":"Accessing the datastore","text":"<p>The datastore can be accessed from any page with the top-right shortcut.  </p> <p></p> <p>A new pane will open, with a default folder tree created for the case.  </p>"},{"location":"operations/datastore/#files","title":"Files","text":""},{"location":"operations/datastore/#adding-a-file","title":"Adding a file","text":"<p>To add a file to a folder, press the <code>+</code> button near a folder where you want to place it, and select <code>Add file</code>. </p> <p></p> <p>A new window appear and allows to upload the file. The following fields are available : </p> <ul> <li>Filename : Name of the file to upload. Automatically detected when a file is selected,</li> <li>Description : An optional description of the file,</li> <li>Password : An optional password to encrypt the file in a zip with. Files marked as IOC are automatically protected with <code>infected</code> unless specified otherwise in this field,</li> <li>Tags : Optional tags to help filtering later on, </li> <li>File is IOC : If set, the file is stored on a separate folder on the server and is automatically protected with <code>infected</code> unless specified otherwise in the password field. The file is also added to the IOC tab of the case, </li> <li>File is evidence : If set, the file is stored on a separate folder on the server and is added to the Evidences tab of the case. </li> </ul> <p>A file can be both IOC and Evidence, in which case it is handled as an IOC and also added to the Evidence tab of the case. </p> <p></p> <p>Depending on the file size, the upload might take some time. We are aware that the Nginx introduces a delay compared to a direct upload. We have not yet found a configuration that does not impact the speed upload.  </p> <p>Once uploaded, and depending on the options selected, the file appear in the target folder with specific icons. A mouse hover explains what each icon means. </p>"},{"location":"operations/datastore/#files-operations","title":"Files operations","text":"<p>Once a file is added, a left-click on it shows a dropdown with multiple options.  </p> <p></p> <ul> <li>Link : Copies in the clipboard a direct link to the file, </li> <li>Markdown link : Copies in the clipboard a link in markdown format for direct use in a note or summary. If the file is an image, the copied link is an image tag,  </li> <li>Download : Download the file. If the file is password protected, the resulting file is a password protected zip,</li> <li>Info : Shows multiple information on the file such as password, file size, hash, internal name, ID, UUID, etc, </li> <li>Edit : Allows to edit the file information. Uploading a new file replaces the original, the link stays the same. It is however not possible to set a password after the initial upload,  </li> <li>Move : Move file to another directory. Once selected, click on the target directory and validate the move,</li> <li>Delete : Delete the file entry and the file from the server. The potential entries added in IOC and Evidences are not updated. </li> </ul> <p>Batch operations such as moving and deleting are also available by clicking on <code>Select</code> at the top right, and then selecting the files. </p>"},{"location":"operations/datastore/#pasting-in-notes-and-summary","title":"Pasting in notes and summary","text":"<p>Images can now be directly pasted in notes an summary. Only images are supported. Once an image is pasted, the file is automatically uploaded in the datastore in the folder <code>Notes Upload</code> and a link to the file is inserted. </p> <p>Example of pasted image </p> <p>The image is by default sized to <code>40%</code>. Changing the end of the link <code>=SIZE%xSIZE%</code> allows to resize the image.  </p> <p>The file is now available in the DS and can be replaced if needed. The ID of the file is the one provided in the link, which can help finding out when names are updated.  </p> <p></p> <p>Note</p> <p>Under certain conditions (browser, version, OS) the image copy/paste cannot be done directly. This is a known issue, not directly linked to IRIS but related to how browsers handle files in clipboards. If you face this issue, try to open the image and copy it from there instead of the file manager. Otherwise you need to upload it via the Datastore and then get a link from it.  </p>"},{"location":"operations/datastore/#folders","title":"Folders","text":""},{"location":"operations/datastore/#adding-a-folder","title":"Adding a folder","text":"<p>To add folder, press the <code>+</code> button near a folder where you want to place it, and select <code>Add subfolder</code>. </p> <p></p> <p>A new window appear requesting the name of the folder to create. Validate and the new folder appears in the folder tree. Files can then be added to it. </p>"},{"location":"operations/datastore/#moving-folders","title":"Moving folders","text":"<p>Folders can be moved within other folders. When doing so, every files and subfolders are also moved, like we are used to with files managers.  </p> <p>Click on the <code>+</code> near the folder to move, and then select <code>Move</code>. The target folder is underlined in blue. Select then the target folder which should appear underline in orange. Then validate the move.  </p> <p></p> <p>The folder and all its children are moved in the target directory. </p> <p></p>"},{"location":"operations/datastore/#searching","title":"Searching","text":"<p>When dozens of files are added, the filtering bar can be used to quickly find a file. The filtering mechanism is similar to the one in the timeline. </p> <p>The query schema is : <code>target_element:search_value AND target_element2:search_value2</code>. There is no OR condition and searching without target does not work.</p> <p>The following target elements can be used to filter :</p> <ul> <li>name: Name of the file</li> <li>id: ID of the file</li> <li>uuid: UUID of the file</li> <li>storage_name: Name of the file on the FS</li> <li>tag: Tag of the file</li> <li>description: Description of the file</li> <li>is_ioc : Set to any value to filter files which are IOCs</li> <li>is_evidence: Set to any value to filter files which are evidences</li> <li>has_password: Set to any value to filter files which have passwords</li> <li>sha256: SHA256 to filter files with</li> </ul> <p></p>"},{"location":"operations/datastore/#under-the-hood","title":"Under the hood","text":"<p>Here a are a few concepts to better understand how the datastore is working.  </p> <p>Folders represented on the datastore are virtual and do not represent the folders on the system. This is to ensure smooth files operations. The files are never touched again (unless overwritten or deleted) once uploaded. When a file or directory is moved or renamed, only its parent references are updated.</p> <p>Files are saved by GUID instead of their real names on the system. They are saved under the mapped volume <code>/home/iris/server_data/datastore</code> by default. Then three directories are created : </p> <ul> <li><code>Evidences</code></li> <li><code>IOCs</code></li> <li><code>Regulars</code></li> </ul> <p>Within each of these, a new subdirectory with the case ID is created when a file is uploaded. This is ensure IOC, which can be harmful, are formally identified on the server itself. Files can be found on the system by looking up the <code>Storage UUID</code> of the file (eg: <code>dsf-f86926ec-513d-4e47-88fa-02110e7fb412</code>) in these directories. </p>"},{"location":"operations/logging/","title":"Logging","text":"<p>All components of IRIS offers by-default logging in the docker instances. Depending on the OS of the hosts, the location of these logs may differ.  </p> <p>For Debian-based distributions, the logs are usually in <code>/var/lib/docker/containers/</code>.  The usually interesting logs in IRIS are the following: </p> <ul> <li><code>iriswebapp_app</code> : Contains the logs of core of IRIS, including major stack traces and access control output </li> <li><code>iriswebapp_worker</code>: Contains the logs of the worker and output of modules</li> <li><code>iriswebapp_nginx</code>: Contains the logs of the reverse proxy. Every request to IRIS is logged there.  </li> </ul>"},{"location":"operations/logging/#setting-up-forwarding","title":"Setting up forwarding","text":"<p>Logs of IRIS can be forwarded to a SIEM for monitoring. Below is discussed how to setup Splunk forwarding. Other drivers are available and detailed on the docker website.    </p> <ol> <li>Enable HEC and get an HEC token from Splunk. See the Splunk documentation</li> <li>On the host where docker is running, create a file <code>/etc/docker/daemon.json</code> and specify the following content:      <pre><code>{\n    \"log-driver\": \"splunk\",\n    \"log-opts\": {\n        \"splunk-insecureskipverify\": \"true\", \n        \"splunk-index\": \"iris\",\n        \"splunk-token\": \"YOUR HEC TOKEN\",\n        \"splunk-url\": \"https://SPLUNK_SERVER:8088\"\n    }\n}\n</code></pre></li> <li>Reload the docker daemon: <code>systemctl reload docker</code>. The logs should appear in the Splunk instance.</li> </ol>"},{"location":"operations/reports/","title":"Reports","text":"<p>IRIS has the ability to generate reports based on the data of an investigation.   The reports templates can be managed in <code>Advanced</code> &gt; <code>Templates</code>.</p> <p>Info</p> <p>This section is only available for users with the Admin role.</p> <p>There is two types of reports : </p> <ul> <li>Investigation; these contains the investigation data and can produces a custom-ready document</li> <li>Activities; these contains activities done on the case and can be used as a follow-up  </li> </ul>"},{"location":"operations/reports/#supported-formats","title":"Supported formats","text":"<p>The following report formats are supported: </p> <ul> <li>docx </li> <li>markdown (.md)</li> <li>html </li> </ul>"},{"location":"operations/reports/#structure-of-templates","title":"Structure of templates","text":"<p>Reports templates are made of tags, which are then processed and filed by the template engine of IRIS.  The templates can have any forms as soon as they respect the tags. We are providing two example of reports. </p> <ul> <li>Example of investigation template : Download </li> <li>Example of activities report template : Download</li> </ul> <p>Info</p> <p>The templates includes a few lines that describes how to handle styles. These should not be removed.  They are be present in the generated reports and need to be removed manually. </p> <p></p>"},{"location":"operations/reports/#available-tags","title":"Available tags","text":"<p>The following tags are available. None are mandatory. If a tag is mistyped, the generation step will produce an error message.    </p> <p>Hint</p> <p>To get the list of available tags for a specific IRIS version, head to <code>/case/export?cid=1</code>. </p> <p>Hint</p> <p>Standard objects are accessible with <code>{{ objectname }}</code>. List objects can be looped:</p> <pre><code>  {% for object in object_list %}\n    {{ object.attribute }}\n  {% endfor %} \n</code></pre> <ul> <li><code>case.name</code>: Name of the case</li> <li><code>case.description</code>: Description of the case</li> <li><code>case.open_date</code>: Case open date </li> <li><code>case.close_date</code>: Case close date </li> <li><code>case.opened_by</code>: User that initially opened the case </li> <li><code>case.for_customer</code>: Customer linked to the case </li> <li><code>case.soc_id</code>: SOC ID number linked to the case </li> <li> <p><code>evidences</code>: List of evidence objects (see below - given <code>evidence</code> as loop variable)</p> <ul> <li><code>evidence.filename</code>: File name of the evidence </li> <li><code>evidence.date_added</code>: Date of registration </li> <li><code>evidence.file_hash</code>: Hash of the evidence </li> <li><code>evidence.added_by</code>: User who added the evidence</li> <li><code>evidence.custom_attributes</code>: Custom attributes of the evidence</li> </ul> </li> <li> <p><code>iocs</code>: List of IOCs objects (see below - given <code>ioc</code> as loop variable)</p> <ul> <li><code>ioc.ioc_value</code>: Value of the IOC </li> <li><code>ioc.ioc_description</code>: Description of the IOC</li> <li><code>ioc.ioc_type</code>: Type of IOC </li> <li><code>ioc.ioc_tags</code>: Tags linked to the IOC </li> <li><code>ioc.custom_attributes</code>: Custom attributes of the IOC</li> </ul> </li> <li> <p><code>notes</code>: List of notes objects (see below - given <code>note</code> as loop variable)</p> <ul> <li><code>note.note_title</code>: Title of the note </li> <li><code>note.note_content</code>: Content of the note </li> <li><code>note.note_creationdate</code>: Creation date of the note </li> <li><code>note.note_lastupdate</code>: Date of last update </li> <li><code>note.custom_attributes</code>: Custom attributes of the note</li> </ul> </li> <li> <p><code>tasks</code>: List of tasks objects (see below - given <code>task</code> as loop variable)</p> <ul> <li><code>task.task_title</code>: Title of the task </li> <li><code>task.task_description</code>: Description of the task </li> <li><code>task.task_open_date</code>: Open date of the task </li> <li><code>task.task_last_update</code>: Last update of the task </li> <li><code>task.task_close_date</code>: Date of closure </li> <li><code>task.task_status</code>: Status of the task </li> <li><code>task.task_tags</code>: Task for the tags </li> <li><code>task.custom_attributes</code>: Custom attributes of the task</li> </ul> </li> <li> <p><code>timeline</code>: List of events objects (see below - given <code>event</code> as loop variable)</p> <ul> <li><code>event.event_title</code>: Title of the event </li> <li><code>event.event_content</code>: Content of the event </li> <li><code>event.event_raw</code>: Raw content of the event </li> <li><code>event.event_date</code>: Date when the event happened </li> <li><code>event.event_source</code>: Source of the event </li> <li><code>event.category</code>: Category of the event </li> <li><code>event.event_tags</code>: Tags of the events </li> <li><code>event.last_edited_by</code>: User who last edited the event </li> <li><code>event.assets</code>: List of assets names linked to the event</li> <li><code>event.custom_attributes</code>: Custom attributes of the event</li> </ul> </li> </ul>"},{"location":"operations/reports/#examples","title":"Examples","text":""},{"location":"operations/reports/#full-documents","title":"Full documents","text":"<p>We are providing two example of full reports. </p> <ul> <li>Example of investigation template : Download </li> <li>Example of activities report template : Download</li> </ul>"},{"location":"operations/reports/#snippets","title":"Snippets","text":"<p>The following snippets aimed to be placed directly in the DOCX documents.   </p>"},{"location":"operations/reports/#loops-and-tables","title":"Loops and tables","text":""},{"location":"operations/reports/#standard-loops","title":"Standard loops","text":"<p>A loop needs to be used for list objects.  Loop on IOC example<pre><code>The IOCs of this case are : \n\n{% for ioc in case.iocs %}\n    - {{ ioc.ioc_value }}\n    - {{ ioc.ioc_description }}\n{% endfor %}\n</code></pre></p>"},{"location":"operations/reports/#table-loops","title":"Table loops","text":"<p>To use a loop in a table, a <code>tr</code> tag needs to be added to the loop and the loop directly integrated in the table.  Loop on IOC table example<pre><code>The IOCs of this case are in the following table : \n\n{%tr for ioc in case.iocs %}\n    {{ ioc.ioc_value }}\n    {{ ioc.type_name }}\n    {{ ioc.ioc_description }}\n{%tr endfor %}\n</code></pre> Such as : </p> <p></p>"},{"location":"operations/reports/#nested-loops","title":"Nested loops","text":"<p>Loops can be nested. Don't forget to close each loop. </p> Nested loop<pre><code>{%for ioc in case.iocs %}\n\n    Custom attributes of {{ ioc.ioc_value }} :\n\n    {% for attribute in ioc.custom_attributes %}\n\n        - {{ attribute }}\n\n    {% endfor %}\n\n{% endfor %}\n</code></pre>"},{"location":"operations/reports/#conditions","title":"Conditions","text":""},{"location":"operations/reports/#standard","title":"Standard","text":"Check if asset is compromised<pre><code>{% for asset in assets %} \n\n    {% if asset.compromised %}\n        Asset {{ asset.asset_name }} is compromised\n    {% endif %}\n\n{% endfor %}\n</code></pre>"},{"location":"operations/reports/#list-is-not-empty","title":"List is not empty","text":"<p>To check if a list of objects is not empty, use the processor tag <code>count</code>.  </p> Check if case has assets<pre><code>{% if assets|count %} \n    The case has assets\n{% endif %}\n</code></pre>"},{"location":"operations/reports/#markdown-handling","title":"Markdown handling","text":"<p>The case summary and notes are in markdown. A processor tag should thus be added <code>|markdown</code>. Summary as markdown<pre><code>This is an example of summary : \n\n{{ case.description|markdown }}\n</code></pre></p> Loop over notes<pre><code>This is an example of recursive notes  : \n\n{% for note in case.notes %}\n\n    My note named {{ note.note_title }} : \n    {{ note.note_content|markdown }}\n\n{% endfor %}\n</code></pre>"},{"location":"operations/reports/#troubleshoot","title":"Troubleshoot","text":"<p>Most of the time an error of generation is due to misspelled tag or a missing closing tag (<code>{% endfor %}</code>, <code>{% endif %}</code>, etc). In case you cannot figure out what is going wrong, don't hesitate to reach us on Discord.</p>"},{"location":"operations/server_settings/","title":"Server settings","text":"<p>Some basic settings can be set in the section <code>Advanced</code> &gt; <code>Server settings</code>.  </p> <ul> <li>Proxy : These settings can be inherited by modules. This avoid setting proxy for each modules. This is not enforced and is up to the module to use it or not.  </li> <li> <p>Behavior : </p> <ul> <li><code>Prevent post-init step to register default modules again during boot</code>: By default if a module is deleted and the server is restart, the module will be registered again. Setting this will prevent this behavior.  </li> <li><code>Prevent post-init step to register default case objects again during boot</code>: By default if case objects are deleted and the server is restart, the case objects will be registered again. Setting this will prevent this behavior. </li> </ul> </li> <li> <p>Password policy : the password policy can be changed and is applied for the new users and next changes of users password</p> </li> </ul>"},{"location":"operations/tutorials/","title":"Tutorials","text":"<p>The tutorials have been discared as we now provide a free demonstration instance on v200.beta.dfir-iris.org.  Should you need more information or assistance to use IRIS, you can contact us here. </p>"},{"location":"operations/upgrades/","title":"Upgrades","text":"<p>Most of the time, Iris handles upgrades of the database automatically when a new version is started, thus no specific actions are required. However, some breaking changes might need manual intervention.  Please use the selectors below to assess if a manual action is required. </p> <p>Your current version: </p> <p>Upgrading to: <p></p> <p> Check upgrades conditions </p> <p>For production environments, it is highly recommended to make backups of the DB in case any issues occur during upgrades. </p>"},{"location":"operations/upgrades/#backing-up-db","title":"Backing-up DB","text":"<p>Only if you run in production and/or data is critical. </p> <ol> <li>List the current running docker containers <code>docker container list</code></li> <li>Spot the IRIS DB container name or ID, and execute the backup</li> </ol> <pre><code>  docker exec &lt;container&gt; pg_dump -U postgres iris_db | \\ \n    gzip &gt; ../iris_db_backup.gz\n</code></pre> <ol> <li>Ensure the backup was successful by looking at the gz file </li> </ol> <pre><code>  zcat ../iris_db_backup.gz | less \n</code></pre>"},{"location":"operations/upgrades/#upgrading","title":"Upgrading","text":"<ol> <li> <p>Stop the dockers      <pre><code>docker-compose stop\n</code></pre></p> </li> <li> <p>Remove the application dockers      <pre><code>docker-compose rm app worker\n</code></pre></p> </li> <li> <p>Get the last version of Iris      <pre><code>git pull \ngit checkout &lt;last_tagged_version&gt;\n</code></pre></p> <p>eg <code>git checkout v2.4.12</code></p> </li> <li> <p>Pull the new version      <pre><code>docker compose pull\n</code></pre></p> </li> <li> <p>Run IRIS again. The app will handle the DB migration automatically.     <pre><code>docker compose up\n</code></pre></p> </li> </ol>"},{"location":"operations/upgrades/#rolling-back","title":"Rolling back","text":"<p>In case something went wrong, you can rollback to your previous version and restore data. </p> <ol> <li>Remove the faulty docker DB <code>docker-compose down db --volumes</code></li> <li>Checkout to the previous version working of IRIS </li> <li>Rebuild the images <code>docker-compose build --no-cache</code></li> <li>Spin up the docker DB, and ONLY this one. <code>docker-compose up db</code></li> <li>Get the ID or name of the docker DB <code>docker container list</code></li> <li>Restore the DB data <code>zcat ../iris_db_backup.gz | docker exec -i &lt;container&gt; psql -U postgres -d iris_db</code></li> <li>Spin up the rest of the dockers <code>docker-compose up</code></li> <li>Your data should back.</li> </ol>"},{"location":"operations/upgrades/#version-specific-upgrades","title":"Version specific upgrades","text":""},{"location":"operations/upgrades/#v248-and-onwards","title":"v2.4.8 and onwards","text":"<p>The default docker compose file now pulls prebuilt images from the Docker Hub. This is done to speed up the deployment process.  \u2757 Custom docker compose file need to be updated to reflect this change. </p>"},{"location":"operations/upgrades/#v240-to-v247","title":"v2.4.0 to v2.4.7","text":"<p>Warning</p> <p>v2.4.0 to v2.4.6 contains bugs. Please upgrade to v2.4.7 directly. </p> <p>The update from previous versions to this one is done automatically. However it introduces a number of changes in the API and access control. It may thus break integrations.</p> <p>Danger</p> <p>Access control has been updated. Starting from this version, all users have by-default access deny to all the cases, expect explicitely specified otherwise by group membership or automatic access rights. Users can also now be linked to customers, which automatically give them access to the related alerts and cases.   </p> <ul> <li>The migration to the new access control system is done automatically. </li> <li>New users will not have access to any cases until they are explicitely granted access.  </li> <li>Existing users will keep their previous access rights. </li> <li>Existing users will not be linked to any customer. They will need to be linked to a customer to have access to the new cases. </li> <li>Existing users not linked to customers will not see any alerts. They need to be added to the corresponding customer to see the alerts.  </li> </ul> <p>Please refer to the API documentation to update any integration which may use the following features: </p> <ul> <li>Notes </li> <li>Timeline </li> <li>Acccess control </li> </ul> <p>The layout of the reporting has been updated as well. Refer to the <code>https://&lt;server&gt;/case/export?cid=&lt;case_id&gt;</code> endpoint to get all the possible fields.</p>"},{"location":"operations/upgrades/#v234","title":"v2.3.4","text":"<p>\u2757 The layout of the reporting has slightly changed. Custom report templates might not work anymore. You can use <code>https://&lt;server&gt;/case/export?cid=&lt;case_id&gt;</code> to get all the possible fields.</p> <p>No other impact is to be expected.   </p>"},{"location":"operations/upgrades/#v210","title":"v2.1.0","text":"<p>The default location of the SSL certificates have been changed from <code>dockers/nginx/dev_certs</code> to <code>certificates/nginx/web_certificates</code>. The <code>docker-compose.yml</code> has thus been updated to mount this volume on the nginx Docker.   </p> <p>Except these changes, users in v2.0.x can upgrade to v2.1.0 without any manual intervention.  Users in v1.4.x need to follow the v2.0.0 upgrade instructions before upgrading to v2.1.0.  </p>"},{"location":"operations/upgrades/#v200","title":"v2.0.0","text":""},{"location":"operations/upgrades/#breaking-changes","title":"Breaking changes","text":"<p>This version brings breaking changes on the following: </p> <ul> <li>API </li> <li>Modules </li> <li>Python Client </li> <li>Environment variables in the <code>.env</code> configuration</li> <li>Default listening ports of IRIS WebApp</li> </ul> <p>Warning</p> <p>Custom made modules need to be upgraded to IRIS Module Interface v1.2.0. Please see modules upgrade for v2.0.0</p>"},{"location":"operations/upgrades/#instance-migration","title":"Instance migration","text":"<p>To migrate an instance from v1.4.5, one can use the script in <code>upgrades/upgrade_to_2.0.0.py</code> located in the repository.  These commands needs to be run from the root of the repository (<code>pwd</code> should return something like <code>/iris-web</code>):  </p> <pre><code># Pull the lastest version \ngit pull \n\n# Checkout to iris v2.0.0\ngit checkout v2.0.0 \n\n# Check if upgrades possible\npython3 upgrades/upgrade_to_2.0.0.py --check\n\n# Run the upgrade\npython3 upgrades/upgrade_to_2.0.0.py --install\n</code></pre> <p>The script will take care of migrating the environment variables to reflect the changes in v2.0.0. Please review the <code>.env</code> file afterward.   </p> <p>The port have been changed 443. The script asks if the previous port should be kept or migrated to the new one. </p> <p>Once validated, one can proceed with the usual upgrade methodology.  </p> <pre><code>docker-compose stop \ndocker-compose build --no-cache \ndocker-compose up -d\n</code></pre>"},{"location":"operations/upgrades/#v200-modules-upgrades","title":"v2.0.0 modules upgrades","text":"<p>This only concerns custom modules not shipped with IRIS Web App. The IRIS module interface has been upgraded to v1.2.0. No breaking changes are associated. One need to change the <code>iris_module_interface</code> dependency to 1.2.0 in the requirements and rebuild the module.  </p>"},{"location":"operations/upgrades/#python-client","title":"Python client","text":"<p>The client has been updated to reflect the latest changes of the API. It also integrates features that were missing previously, such as Datastore Management.  Some methods have been deprecated and some other modified. The easiest way to upgrade is to increase the version in the requirements and test. Each deprecated method will produce a warning or raise an exception.  </p>"},{"location":"operations/upgrades/#v145","title":"v1.4.5","text":"<p>If you are coming from IRIS &lt;= v1.3.1 please read this. Changes have been made to the NGINX docker to allow upload of big files for the datastore. It is hence necessary to also rebuild the NGINX docker this time.  </p> <ol> <li>Stop the dockers <code>docker-compose stop</code></li> <li>Remove the application dockers <code>docker-compose rm app worker</code></li> <li>Get the last version of Iris <code>git checkout &lt;last_tagged_version&gt;</code> - eg <code>git checkout v1.4.5</code></li> <li>Build the new versions <code>docker-compose build --no-cache app worker nginx</code></li> <li>Run IRIS again. <code>docker-compose up</code></li> </ol>"},{"location":"operations/upgrades/#v144","title":"v1.4.4","text":"<p>This only applies if you are coming from IRIS &lt;= v1.3.1.</p> <p>This version brings breaking changes in the DB docker by adding a named volume instead of the default one. This implies that previous existing database is ignored as the new docker won't know which volume was previously used.  To prevent this, please strictly follow the guide below. This will copy the data of the existing volume, to the new named one. </p> <ol> <li>Spot the IRIS DB container with <code>docker container list</code>. It should look like <code>iris-web-db-x</code></li> <li>Fetch the current db volume ID (<code>name</code> field with the command below)</li> </ol> <p><pre><code>docker inspect &lt;iris_db&gt; | grep -A5 \"Mounts\"\n\n# Example of output\n\"Mounts\": [\n  {\n      \"Type\": \"volume\",\n      \"Name\": \"a90b9998a3233a68438c8e099bd0ba98d9f62c9734e40297b8067f9fdb921eb9\",\n      \"Source\": \"/var/lib/docker/volumes/a90b9998a3233a68438c8e099bd0ba98d9f62c9734e40297b8067f9fdb921eb9/_data\",\n      \"Destination\": \"/var/lib/postgresql/data\",\n</code></pre> 3. Stop all the IRIS dockers : <code>docker-compose stop</code> 4. Create a new empty volume : <code>docker volume create --name iris-web_db_data</code>  5. Run a volume copy via a dummy image :  <pre><code>docker run --rm -it -v &lt;previous_db_volume_id&gt;:/from:ro -v iris-web_db_data:/to alpine ash -c \"cd /from ; cp -av . /to\"\n\n# With the example of 2., this gives \ndocker run --rm -it -v a90b9998a3233a68438c8e099bd0ba98d9f62c9734e40297b8067f9fdb921eb9:/from:ro -v iris-web_db_data:/to alpine ash -c \"cd /from ; cp -av . /to\"\n</code></pre> 6. Pull the last changes from the repository, checkout to <code>v1.4.4</code>, build and run. </p> <p><pre><code>git pull origin \ngit checkout v1.4.4\ndocker-compose build \ndocker-compose up \n</code></pre> 7. The data should be successfully transferred.</p> <p>Do not forget to clear out your browser cache, many JS files were changed.</p>"},{"location":"operations/upgrades/#v143","title":"v1.4.3","text":"<p>A patch exists for this version. Please directly upgrade to v1.4.4</p>"},{"location":"operations/upgrades/#v142","title":"v1.4.2","text":"<p>A patch exists for this version. Please directly upgrade to v1.4.4</p>"},{"location":"operations/upgrades/#v141","title":"v1.4.1","text":"<p>A patch exists for this version. Please directly upgrade to v1.4.4</p>"},{"location":"operations/upgrades/#v140","title":"v1.4.0","text":"<p>A patch exists for this version. Please directly upgrade to v1.4.4</p>"},{"location":"operations/access_control/","title":"Access control","text":"<p>Changes in v2.4.0</p> <p>Starting from IRIS v2.4.0 the default access control is <code>deny_all</code> for all users.  When upgrading, existing users keep their rights on the existing cases.</p> <p>IRIS offers a granular access control for cases and management features. Two types of access control are available : </p> <ul> <li>Permissions (RBAC): Allows control the access to specific management features on the platform (adding users, cases etc.)</li> <li>Cases access (ACL): Allows segregate cases between users</li> </ul> <p>To ease the access control, users can be managed in : </p> <ul> <li>Customers: Provides cases and alerts access controls</li> <li>Groups: Provides permissions and cases access controls</li> <li>Users: Provides granular per-user cases access control</li> </ul> <p>A user can be in one or multiple groups and customers. The effective case access control of a user is deduced from its group and customer membership and its own cases access control. The effective permissions are deduced from its groups membership.  </p>"},{"location":"operations/access_control/#cases-access-control-overview","title":"Cases access control overview","text":"<p>Cases access control offer three levels: </p> <ul> <li><code>deny_all</code>: No access to the case. The user don't even see the case listed, </li> <li><code>read_only</code>: Read-only access to the case. The user can see everything related to the case but cannot edit,</li> <li><code>full_access</code>: Read-write access to the case. The user can see and edit everything related to the case, including closing and deleting the case.  </li> </ul> <p>Cases access control can be applied through customers, groups and users. It starts with the customers, groups and ends with atomic user access control.  </p> <p>For example, the following configuration gives no access to the user since the atomic user access prevail upon the rest. </p> <pre><code>stateDiagram-v2\n    DefaultPermission --&gt; Group_prevail: DenyAll\n\n    state join_groups &lt;&lt;join&gt;&gt;\n    Group1 --&gt; join_groups: ReadOnly\n    Group2 --&gt; join_groups: DenyAll\n    join_groups --&gt; Group_prevail: ReadOnly\n    Group_prevail --&gt; Effective_DenyAll: ReadOnly \n\n    Effective_DenyAll: Resulting Deny All access for user\n    User_Access --&gt; Effective_DenyAll: DenyAll</code></pre> <p>In the next configuration,  the user has Read Only access to the case because the atomic user access is not set, so the access is inherited from the group ownership.  <pre><code>stateDiagram-v2\n    DefaultPermission --&gt; Group_prevail: DenyAll\n\n    state join_groups &lt;&lt;join&gt;&gt;\n    Group1 --&gt; join_groups: ReadOnly\n    Group2 --&gt; join_groups: DenyAll\n    Group3 --&gt; join_groups: DenyAll\n    join_groups --&gt; Group_prevail: ReadOnly\n\n    Effective_ReadOnly: Resulting Read Only access for user\n    Group_prevail --&gt; Effective_ReadOnly: ReadOnly \n\n    User_Access --&gt; Effective_ReadOnly: Not set</code></pre></p> <p>This notably allows to create groups which can join a set of people from different organisations to work on the same case. </p> <p>In the next configuration, the user pertains to a customer, which give automatically Full Access access to all the cases of the customer.  <pre><code>stateDiagram-v2\n    DefaultPermission --&gt; Customer_prevail: DenyAll\n\n    Customer1 --&gt; Customer_prevail: FullAccess\n    Group1 --&gt; Effective_FullAccess: Not set\n\n    Effective_FullAccess: Resulting Full Access access for user\n    Customer_prevail --&gt; Effective_FullAccess: FullAccess \n\n    User_Access --&gt; Effective_FullAccess: Not set</code></pre></p> <p>In case the user pertains to a customer but is also in a group, the group access prevail upon the customer access.  <pre><code>stateDiagram-v2\n    DefaultPermission --&gt; Customer_prevail: DenyAll\n\n    Customer1 --&gt; Customer_prevail: FullAccess\n    Group1 --&gt; Group_prevail: ReadOnly\n\n    Customer_prevail --&gt; Group_prevail: FullAccess\n\n    Group_prevail --&gt; Effective_FullAccess: ReadOnly\n\n    Effective_FullAccess: Resulting Read only Access access for user\n\n    User_Access --&gt; Effective_FullAccess: Not set</code></pre></p> <p>Finally, the atomic user access prevail upon the rest.  <pre><code>stateDiagram-v2\n    DefaultPermission --&gt; Customer_prevail: DenyAll\n\n    Customer1 --&gt; Customer_prevail: FullAccess\n    Group1 --&gt; Group_prevail: ReadOnly\n\n    Customer_prevail --&gt; Group_prevail: FullAccess\n\n    User_access --&gt; User_prevail: DenyAll\n    Group_prevail --&gt; User_prevail: ReadOnly\n    User_prevail --&gt; Effective_FullAccess: DenyAll\n\n    Effective_FullAccess: Resulting Deny all Access access for user</code></pre></p>"},{"location":"operations/access_control/#permissions-control","title":"Permissions control","text":"<p>Permissions allow to control the access to specific management features on the platform (adding users, cases etc.).  A set of permissions are available: </p> <ul> <li><code>standard_user</code>: which includes the basic access to the interface and create cases</li> <li><code>server_administrator</code>: which includes managing users, groups</li> <li><code>alerts_read</code>: which includes access to the alerts</li> <li><code>alerts_write</code>: which includes access to the alerts and the ability to add new ones</li> <li><code>alerts_delete</code>: which includes the ability to delete the alerts</li> <li><code>search across cases</code>: which includes the ability to search across cases</li> <li><code>customers_read</code>: which includes the ability to read customers</li> <li><code>customers_write</code>: which includes the ability to add and edit customers</li> <li><code>case_templates_read</code>: which includes the ability to read case templates</li> <li><code>case_templates_write</code>: which includes the ability to add and edit case templates</li> <li><code>activities_read</code>: which includes the ability to read activities</li> <li><code>all_activities_read</code>: which includes the ability to read all activities of all cases</li> </ul>"},{"location":"operations/access_control/authentication/","title":"Authentication","text":"<p>IRIS supports local, LDAP and OIDC authentication. </p> <p>Note</p> <p>In all the cases, users need to be declared in IRIS.   </p>"},{"location":"operations/access_control/authentication/#local-authentication","title":"Local authentication","text":"<p>Local authentication is the default setting. The password is validated against the local IRIS database. Passwords are stored salted and hashed, it is thus not possible to retrieve them in case they are lost. It is however possible to change them.   </p>"},{"location":"operations/access_control/authentication/#changing-a-lost-password","title":"Changing a lost password","text":"<p>If another administrative user exists : Being logged as this user, head to the <code>Advanced</code> &gt; <code>Access Control</code> &gt; <code>Users</code> section, and change the administrator password. </p> <p>If no other administrative user exists : the change cannot be done via IRIS and an access to the backend is needed.  </p> <p>Danger</p> <p>Do not delete and recreate any users directly from the DB! This will create inconsistencies in the relations and certainly corrupt everything. </p> <ol> <li> <p>Generate the hash of the new password with Python BCrypt in Python prompt</p> <pre><code>import bcrypt\nprint(bcrypt.hashpw('&lt;new_password&gt;'.encode('utf-8'), bcrypt.gensalt()))\n</code></pre> </li> <li> <p>Connect to the DB docker then the Postgresql database <code>iris_db</code> and update the password </p> <pre><code>docker exec -ti &lt;db_docker_id&gt; /bin/bash\n/ # su postgres\n/ # psql\npostgres=# \\c iris_db \npostgres=# UPDATE \"user\" SET password = '&lt;hash&gt;' WHERE \"user\".name = 'administrator';\npostgres=# \\q\nexit\nexit\n</code></pre> </li> </ol>"},{"location":"operations/access_control/authentication/#ldap-authentication","title":"LDAP authentication","text":"<p>LDAP authentication rely on a LDAP server to verify the password of a user.   The user needs to be declared in IRIS.   </p> <pre><code>graph LR\n    A[User] --&gt;|Authenticate| B(IRIS WebApp)\n    B --&gt; C{User exists in DB?}\n    C --&gt;|Yes| D{LDAP accepted password?}\n    C --&gt;|No| E[Authentication failed]\n    D --&gt;|Yes| F[Authentication succeeded]\n    D --&gt;|No| E[Authentication failed]</code></pre>"},{"location":"operations/access_control/authentication/#settings","title":"Settings","text":"<p>The LDAP settings are present in the <code>.env</code>. Once the LDAP server information is set, reboot the Iris WebApp docker needs to be restarted.  </p> <pre><code>docker-compose restart app\n</code></pre>"},{"location":"operations/access_control/authentication/#setting-up-ldap-for-the-first-runtime-of-iris","title":"Setting up LDAP for the first runtime of IRIS","text":"<p>To set up LDAP without having run IRIS priorly, and as the app needs the accounts to be created first before using LDAP, one has to set the <code>IRIS_ADM_EMAIL</code> environment with the LDAP Email of the administrator user.  </p> Example of LDAP configuration for first run<pre><code>IRIS_AUTHENTICATION_TYPE=ldap\n\n## IP address or FQDN of the ldap server\nLDAP_SERVER=dc1.domain.local\n\n## Port of the LDAP server\nLDAP_PORT=636\n\n## LDAP Authentication type\nLDAP_AUTHENTICATION_TYPE=SIMPLE\n\n## Prefix to search the users within \nLDAP_USER_PREFIX=uid=\n\n## Suffix to search the users within\nLDAP_USER_SUFFIX=ou=people,dc=example,dc=com\n\n## Set to True to use LDAPS\nLDAP_USE_SSL=True\n\n## Set to True to verify the server certificate validity\nLDAP_VALIDATE_CERTIFICATE=True\n\n## TLS version to use LDAPS\nLDAP_TLS_VERSION=1.2\n\n## LDAP TLS configuration \nLDAP_CUSTOM_TLS_CONFIG=False\n\n# Set email address of the first user, that will be the admin \nIRIS_ADM_EMAIL=adm@example.com \n</code></pre>"},{"location":"operations/access_control/authentication/#setting-up-for-active-directory","title":"Setting up for Active Directory","text":"<p>To use LDAP with an Active Directory, the following settings can be used: </p> Example of LDAP configuration for first run with Active Directory<pre><code>IRIS_AUTHENTICATION_TYPE=ldap\n\n## IP address or FQDN of the ldap server\nLDAP_SERVER=dc1.domain.local\n\n## Port of the LDAP server\nLDAP_PORT=636\n\n## LDAP Authentication type\nLDAP_AUTHENTICATION_TYPE=SIMPLE\n\n## Prefix to search the users within\nLDAP_USER_PREFIX=DOMAIN\\\n\n## Suffix to search the users within\nLDAP_USER_SUFFIX=\n\n## Set to True to verify the server certificate validity\nLDAP_VALIDATE_CERTIFICATE=True\n\n## TLS version to use LDAPS\nLDAP_TLS_VERSION=1.2\n\n## LDAP TLS configuration \nLDAP_CUSTOM_TLS_CONFIG=False\n\n# Set email address of the first user, that will be the admin\nIRIS_ADM_EMAIL=adm@example.com \n</code></pre>"},{"location":"operations/access_control/authentication/#setting-up-ldap-after-iris-already-ran","title":"Setting up LDAP after IRIS already ran","text":"<p>To set up LDAP after IRIS was already run, one only needs to set up the settings described previously without # Set email address of admin  <code>IRIS_ADM_EMAIL=adm@example.com</code> and restart the docker.  </p> <p>Usernames in IRIS have to match the ones set in LDAP for the authentication to succeed.</p>"},{"location":"operations/access_control/authentication/#ldap-certificates","title":"LDAP certificates","text":"<p>If the LDAP server uses a self-signed certificate, it is possible to add it to the trusted certificates of the IRIS WebApp docker. </p> <ol> <li>Copy the certificate to the <code>certificates/ldap</code> folder of the IRIS root directory.</li> <li>Set the <code>LDAP_VALIDATE_CERTIFICATE</code> environment variable to <code>True</code> in the <code>.env</code> file.</li> <li>Set the <code>LDAP_CUSTOM_TLS_CONFIG</code> environment variable to <code>False</code> in the <code>.env</code> file.</li> <li>Set the <code>LDAP_CA_CERTIFICATE</code> environment variable certificate path used by the LDAP server in the <code>.env</code> file.</li> </ol> <p>If the LDAP server requires a client certificate, it is possible to add it to the trusted certificates of the IRIS WebApp docker. </p> <ol> <li>Copy the certificate and key to the <code>certificates/ldap</code> folder of the IRIS root directory.</li> <li>Set the <code>LDAP_VALIDATE_CERTIFICATE</code> environment variable to <code>True</code> in the <code>.env</code> file.</li> <li>Set the <code>LDAP_CUSTOM_TLS_CONFIG</code> environment variable to <code>True</code> in the <code>.env</code> file.</li> <li>Set the <code>LDAP_PRIVATE_KEY</code> environment to the file name of the key in the <code>.env</code> file </li> <li>Set the <code>LDAP_PRIVATE_KEY_PASSWORD</code> environment variable to the password of the key in the <code>.env</code> file - if needed </li> </ol>"},{"location":"operations/access_control/authentication/#oidc-authentication","title":"OIDC authentication","text":"<p>The following needs to be set in the <code>.env</code>.  </p> <pre><code>IRIS_AUTHENTICATION_TYPE=oidc\nOIDC_ISSUER_URL = \nOIDC_CLIENT_ID = \nOIDC_CLIENT_SECRET = \nOIDC_AUTH_ENDPOINT = {optional}\nOIDC_TOKEN_ENDPOINT = {optional}\nOIDC_END_SESSION_ENDPOINT = {optional}\nOIDC_SCOPES = {optional , fallback=\"openid email profile\"}\nOIDC_MAPPING_USERNAME = {optional ,  fallback='preferred_username'}\nOIDC_MAPPING_EMAIL = {optional , fallback='email'}\n</code></pre> <p>On the OIDC provider, the URI to set is <code>/oidc_authorize</code>.   </p>"},{"location":"operations/access_control/authentication/#advanced","title":"Advanced","text":""},{"location":"operations/access_control/authentication/#mfa","title":"MFA","text":"<p>MFA can be enforced for all users by heading to the <code>Advanced</code> &gt; <code>Server Settings</code> &gt; <code>Multi-Factor Authentication</code> section and enabling <code>Enforce MFA for all users</code>.  During the next login, the user will be prompted to set up MFA.  </p>"},{"location":"operations/access_control/authentication/#hybrid-setups","title":"Hybrid setups","text":"<p>IRIS can be use in hybrid setup as follow: </p> <ul> <li><code>LDAP</code> and <code>Local</code> : If the user is not found in LDAP, the local database is checked. In that case, <code>AUTHENTICATION_LOCAL_FALLBACK</code> needs to be set to <code>True</code> in the <code>.env</code>. </li> <li><code>OIDC</code> and <code>Local</code> : If the user is not found in OIDC, the local database is checked. In that case, <code>AUTHENTICATION_LOCAL_FALLBACK</code> needs to be set to <code>True</code> in the <code>.env</code>. </li> </ul>"},{"location":"operations/access_control/groups/","title":"Groups","text":"<p>Groups offer the possibility to set case access as well as permissions. By default two groups are created: </p> <ul> <li><code>Administrator</code>: users in this group hold the <code>server_administrator</code> permission, </li> <li><code>Analysts</code>: users in this group hold the <code>standard_user</code> permission </li> </ul> <p>Both groups are set to give full cases access to the users.  </p>"},{"location":"operations/access_control/groups/#setting-up-a-new-group","title":"Setting up a new group","text":"<p>Head to the Access Control page and click <code>Add group</code>. </p> <p></p> <p>Fill the form. All the fields can be changed later on. The field <code>Group name</code> has to be unique on the IRIS instance. Access control and members can be set once the group is created.   </p>"},{"location":"operations/access_control/groups/#configuring-the-group","title":"Configuring the group","text":"<p>The group can be configured once created by clicking on it in the list. </p>"},{"location":"operations/access_control/groups/#users","title":"Users","text":""},{"location":"operations/access_control/groups/#adding-users-to-a-group","title":"Adding users to a group","text":"<p>To add users to the group, go to the <code>Members</code> tab and click <code>Manage</code>. </p> <p>The <code>User Manager</code> should load and offers a list of users that can be added to the group. Select all the users you want to add to the group and press <code>Save</code>. </p> <p></p> <p>Permissions computation</p> <p>When a user is added/removed to a group, its effective cases access are recomputed. Depending on the number of cases and users added/removed this can take some time.  This process helps reducing the DB load when using IRIS during normal operation. </p>"},{"location":"operations/access_control/groups/#removing-users-from-a-group","title":"Removing users from a group","text":"<p>To remove users from the group, go to the <code>Members</code> tab and click <code>Manage</code>.  </p> <p>The <code>User Manager</code> should load and present a list of both users already in the group as well as the ones that can be added. To remove one or more users, un-tick them from the list and press <code>Save</code>. </p> <p>Alternatively, a user can be directly removed from within the group manager. Click on the red trash next to the user to remove and confirm the deletion.  </p>"},{"location":"operations/access_control/groups/#cases","title":"Cases","text":""},{"location":"operations/access_control/groups/#adding-cases-to-the-group","title":"Adding cases to the group","text":"<p>Access to one or multiple existing cases can be granted to a group. From within the <code>Group Manager</code>, go to the <code>Cases Access</code> tab and click <code>Set case access</code>. </p> <p>The <code>Cases Access Manager</code> loads and gives the possibility to set the access to one or more cases. </p> <p>Three choices of access are offered: </p> <ul> <li><code>deny_all</code>: No access at all to the case. The users won't even see the case listed, </li> <li><code>read_only</code>: Read-only access to the case. The users can see everything related to the case(s) but cannot change anything,</li> <li><code>full_access</code>: Read-Write access to the case. The users can see and change everything related to the case. </li> </ul> <p>Once the desired access is selected, press <code>Set access</code>.  </p> <p>Permissions computation</p> <p>As for the addition of users, when a case is added/removed to a group, all the users' effective cases access are recomputed. Depending on the amount of cases added/removed and number of users this can take some time.  This process helps reducing the DB load when using IRIS during normal operation. </p>"},{"location":"operations/access_control/groups/#removing-cases-from-the-group","title":"Removing cases from the group","text":"<p>From within the <code>Group Manager</code>, go to the <code>Cases Access</code> tab. Click on the red trash next to the case to remove and confirm the deletion. </p>"},{"location":"operations/access_control/groups/#removing-a-group","title":"Removing a group","text":"<p>A group can be deleted by clicking on its name in the list and then <code>Delete</code> at the bottom of the <code>Info</code> tab. </p>"},{"location":"operations/access_control/users/","title":"Users","text":"<p>Authentication</p> <p>Looking for authentication settings? It's here</p> <p>Whatever the authentication mechanism used (Local or LDAP), the users have to be declared in IRIS. This is done in <code>Advanced</code> &gt; <code>Access Control</code> &gt; <code>Users</code>. </p>"},{"location":"operations/access_control/users/#adding-a-user","title":"Adding a user","text":"<p>Head to <code>Advanced</code> &gt; <code>Access Control</code> &gt; <code>Users</code> and click <code>Add user</code>. All fields of the form are required. All information can be changed after the creation.   </p> <p>Note</p> <p>Permissions and groups can be set once the user is created.   </p> <ul> <li>Full Name : Name of the user to add </li> <li>Login : Username used to login in IRIS. Has to be unique on the instance </li> <li>Email : Email of the user to add. Has to be unique on the instance  </li> <li>Password: Password respecting the policy defined in <code>Advanced</code> &gt; <code>Server settings</code>. The password also has to be set when using LDAP, it is then however not used for the authentication. A random password can be set when using LDAP. No password is required when the user is set as a service account.  </li> <li>Is service account : If the user is a server account, check this box. Server accounts are used to connect to the API. They cannot login to the UI. </li> </ul> <p>Service accounts</p> <p>Service accounts users can use the API to perform any actions on the instance. They cannot login to the UI and they don't have a password.</p> <p> </p>"},{"location":"operations/access_control/users/#editing-a-user","title":"Editing a user","text":"<p>A user can be edited by clicking on its name or ID in <code>Advanced</code> &gt; <code>Access Control</code> &gt; <code>Users</code>.  A window opens and display the user's information. Tabs at the top allow to configure multiple settings related to the user.   </p>"},{"location":"operations/access_control/users/#setting-permissions","title":"Setting permissions","text":"<p>Permissions of a user cannot be set directly. They are inherited from the groups membership. The tab <code>Permissions</code> only displays the permissions the user has from its groups memberships.  See Groups for more info.   </p>"},{"location":"operations/access_control/users/#setting-groups","title":"Setting groups","text":"<p>Groups can be set by clicking on the <code>Groups</code> tab of the user's window and then <code>Manage</code>.      </p> <p> </p> <p>A new window appears with the possibility to select the groups the user should belong to.   </p> <p>After saving, the permissions of the user are updated. This can be verified in the <code>Permissions</code> tab.  </p>"},{"location":"operations/access_control/users/#setting-customers","title":"Setting customers","text":"<p>Customers can be set by clicking on the <code>Customers</code> tab of the user's window and then <code>Manage</code>.</p> <p> </p> <p>A new window appears with the possibility to select the customers the user should belong to.  </p>"},{"location":"operations/access_control/users/#setting-cases-access","title":"Setting cases access","text":"<p>Cases access are usually set through groups membership. However for granularity they can be set per user.  To set the access of a user on a case, click on the <code>Cases access</code> tab of the user's window and then <code>Set case access</code>.   </p> <p> </p> <p>As for the Groups, a selector appears and allows to select one or multiple cases and the access to associate.      </p> <p>Info</p> <p>Application of a case access is immediate, even if the user is logged in and browsing the case.  </p> <p>Info</p> <p>Granular case access can also be set from a case itself, in <code>Summary</code> &gt; <code>Manage</code> &gt; <code>Access</code>.  </p>"},{"location":"operations/access_control/users/#deactivating-a-user","title":"Deactivating a user","text":"<p>A user can be deactivated, which has the following impact: </p> <ul> <li>User cannot login anymore </li> <li>User cannot use its API key anymore </li> <li>User is not proposed in tasks assignees anymore </li> </ul> <p> </p>"},{"location":"operations/access_control/users/#deleting-a-user","title":"Deleting a user","text":"<p>It is usually not possible to delete a user. This is to keep consistency in the database. A user can be deleted if it has done absolutely no actions on the platform. If a user leaves the organisation, it is recommended to rename the user and deactivate it.  </p> <p> </p>"},{"location":"operations/access_control/users/#setting-customers_1","title":"Setting customers","text":"<p>Customers can be set by clicking on the <code>Customers</code> tab of the user's window and then <code>Manage</code>. </p>"},{"location":"operations/cases/case_operations/","title":"Case operations","text":""},{"location":"operations/cases/case_operations/#opening-a-case","title":"Opening a case","text":"<p>To open a case anywhere, press the <code>+</code> button in the top right corner. A popup appears and allows to fill the basic information of the new case.</p> <p></p> <p>A new window appears, requesting additional information. The following information are required:  </p> <ul> <li>Customer: Name of the customer the case is related to</li> <li>Case name: Name of the case </li> <li>Short description: Short description of the case - this will be set as the summary of the case</li> </ul> <p>The following information is optional:</p> <ul> <li>Case template: Template to use for the case. If not set, the case will be created empty </li> <li>Case classification: The classfication of the case </li> <li>SOC ticket ID: The ID of the ticket in the SOC ticketing system</li> </ul> <p></p> <p>Once <code>Create</code> is clicked, the case is created and a popup ask whether to the get redirected to the case or to add a new one.  </p>"},{"location":"operations/cases/case_operations/#switching-between-cases","title":"Switching between cases","text":"<p>Each case has its own context. To switch between cases/context, either click on the name of the current case at the top left, or click on the switch button on the top right.</p> <p></p> <p>A popup appears and allows to select the case to switch to. By default the last 100 cases are displayed. To look further in the past, one can use the search bar. Press <code>Save</code> to validate the switch. The page reloads with the new context. </p> <p></p>"},{"location":"operations/cases/case_operations/#updating-a-case","title":"Updating a case","text":"<p>A case metadata can be updated by going switching the case context and heading to <code>Case</code> &gt; <code>Summary</code>.  Clicking on <code>Manage</code> brings up a new window with the case metadata. The right pencil button allows to edit the metadata.  </p> <p></p> <p>The following information can be updated: </p> <ul> <li>Case name: Name of the case</li> <li>SOC ticket ID: The ID of the ticket in the SOC ticketing system</li> <li>Case classification: The classfication of the case </li> <li>Case owner: The owner of the case - by default set to the user who created the case</li> <li>Case state: State of the case - by default set to <code>Open</code>. This defines the state of the case (open, closed, etc.). </li> <li>Case outcome: Outcome of the case - by default set to <code>Unknown</code>. This defines if the case is a true positive, false positive, etc. </li> <li>Case customer: Customer of the case </li> <li>Case reviewer: Reviewer of the case </li> <li>Case severity: Severity of the case - by default set to <code>Medium</code></li> <li>Case tags: Tags of the case - by default set to <code>Open</code></li> <li>Protagonists: Protagonists of the case - by default none. Those are the actors involved in the case.  </li> </ul>"},{"location":"operations/cases/case_operations/#updating-the-access-of-a-case","title":"Updating the access of a case","text":"<p>The access of a case can be updated by going to <code>Case</code> &gt; <code>Summary</code> &gt; <code>Manage</code>, and from the popup, clicking on the <code>Access</code> tab. </p> <p></p> <p>Changes of access are immediately applied.  </p>"},{"location":"operations/cases/case_operations/#closing-a-case","title":"Closing a case","text":"<p>A case can be closed by going to <code>Case</code> &gt; <code>Summary</code> &gt; <code>Manage</code>, and from the popup, clicking on the <code>Close case</code> button. Closing a case doesn't delete it and it can be reopened at any time. The case can also be modified after it has been closed.  </p> <p></p>"},{"location":"operations/cases/case_operations/#getting-modifications-history-of-a-case","title":"Getting modifications history of a case","text":"<p>The modifications history of a case can be retrieved by going to <code>Case</code> &gt; <code>Summary</code> &gt; <code>Manage</code>, and from the popup, clicking on the history icon next to the case name.   </p> <p></p>"},{"location":"operations/cases/iocs/","title":"IOCs","text":"<p>IOCs are observables that were identified during the investigation, or that led to the case creation upon monitoring activities.</p>"},{"location":"operations/cases/iocs/#add-an-ioc","title":"Add an IoC","text":"<p>An IoC object could be created by going to <code>Case</code> &gt; <code>IOC</code>. Clicking on <code>Add IOC</code> in the top right corner brings up a new window for the IoC creation.</p> <p></p> <p>A new window appears, requesting additional information. The following information is required:</p> <ul> <li>Type: Type of the IOC. This will have an impact on available modules.</li> <li>IOC Value: The actual IoC.</li> <li>TLP: Traffic Light Protocol value. (<code>Amber</code> by default)</li> </ul> <p>The following information is optional:</p> <ul> <li>Description: A .md formatted description of the IoC.</li> <li>Task tags: List of tags.</li> </ul> <p></p> <p>Once <code>Save</code> is clicked, the ioc is created.</p>"},{"location":"operations/cases/iocs/#update-an-ioc","title":"Update an IoC","text":"<p>IoC object data can be updated by clicking on the IoC value in the <code>Case</code> &gt; <code>IOC</code> table. A popup appears and allows to change required and non-required fields.</p> <p></p> <p>Once <code>Update</code> is clicked, the IoC is updated.</p>"},{"location":"operations/cases/iocs/#enrich-an-ioc","title":"Enrich an IoC","text":"<p>IoC objects can be enriched in order to add valuable information to it. </p>"},{"location":"operations/cases/iocs/#comment-an-ioc","title":"Comment an IoC","text":"<p>To comment an IoC, one can right click on it, in the <code>Case</code> &gt; <code>IOC</code> menu, and select <code>Comment</code>. A new pop-up appears and allows to leave comments. This is also achievable by clicking on the IoC value in the <code>Case</code> &gt; <code>IOC</code> table, and by clicking on the <code>Comment</code> button.</p> <p></p>"},{"location":"operations/cases/iocs/#launch-a-module-on-an-ioc","title":"Launch a module on an IoC","text":"<p>To have more information about modules, see the Modules section.</p> <p>A set of modules can be launched to enrich IoCs. To do so, one can right click on the IoC , in the <code>Case</code> &gt; <code>IOC</code> table, and select the module of choice.   This is also achievable by clicking on the IoC value in the <code>Case</code> &gt; <code>IOC</code> table, by clicking the <code>Option</code> button, and selecting the desired module.</p> <p></p> <p>The results of the module will appear in newly created tabs, in the IoC details. To view the tabs, click on the the IoC value.</p> <p></p>"},{"location":"operations/cases/iocs/#delete-an-ioc","title":"Delete an IoC","text":"<p>This will permanently delete the IoC and its attributes</p> <p>To delete an IoC, one could either right click on the IoC, and select <code>Delete</code>, or click on the IoC value, and click on the <code>Delete</code> button.</p> <p></p> <p>The IOC is only unlinked from the case if it references other cases</p>"},{"location":"operations/cases/notes/","title":"Notes","text":"<p>Attention</p> <p>The notes layout has been updated in IRIS 2.4.0. The following documentation is valid for IRIS 2.4.0 and above.</p> <p>IRIS allows analysts to add notes to cases. Notes can be added to a case from the <code>Notes</code> tab. Notes are organized by directories. A note has to live within a directory. </p>"},{"location":"operations/cases/notes/#adding-a-directory","title":"Adding a directory","text":"<p>To add a directory, click on the <code>+</code> directory icon on the left side of the <code>Notes</code> tab. A new directory is added to the list and asks for a name. </p> <p></p> <p>The title of the directory can be edited by right clicking on it and selecting <code>Rename</code>.</p> <p></p>"},{"location":"operations/cases/notes/#adding-a-note","title":"Adding a note","text":"<p>To add a note, right click on the directory and select <code>Add note</code>. A new note is added to the list. </p> <p></p> <p>To rename the note, double click on the title and press enter to confirm. </p> <p></p>"},{"location":"operations/cases/notes/#operations","title":"Operations","text":"<p>Notes and directories can be moved. Right click on the note or directory and select <code>Move</code>. A popup appears and allows to select the destination directory.</p>"},{"location":"operations/cases/tasks/","title":"Tasks","text":"<p>Tasks allow incident handlers to split the workload into unit tasks, and to assign them to the team members.</p>"},{"location":"operations/cases/tasks/#add-a-task","title":"Add a task","text":"<p>A task can be created by going to <code>Case</code> &gt; <code>Tasks</code>. Clicking on <code>Add Task</code> in the top right corner brings up a new window for the task creation.</p> <p></p> <p>A new window appears, requesting additional information. The following information is required:</p> <ul> <li>Status: Status of the task.</li> <li>Task Title: Title of the tasks</li> </ul> <p>The following information is optional:</p> <ul> <li>Assigned to: The one who should perform the task.</li> <li>Description: A .md formatted description of the task.</li> <li>Task tags: List of tags.</li> </ul> <p></p> <p>Once <code>Save</code> is clicked, the task is created.</p>"},{"location":"operations/cases/tasks/#update-a-task","title":"Update a task","text":"<p>Task metadata can be updated by clicking on the task title in the <code>Case</code> &gt; <code>Tasks</code> table. A popup appears and allows to change required and non-required fields.</p> <p></p> <p>Once <code>Update</code> is clicked, the task is updated.</p>"},{"location":"operations/cases/tasks/#comment-a-task","title":"Comment a task","text":"<p>Tasks can be commented. This provide the ability for analysts to give more in-deepth information on the task execution (what did they do, how did they do, what are the results, etc.)</p> <p>To comment a task, one can either right click on the task line and select <code>Comment</code>, or click on the task title, and click on the <code>Comment</code> button. A new windows appears and allows to add comments to the task.</p> <p></p> <p>Once <code>Comment</code> is clicked, in the last window, a comment is added to the task. Comments are editable and removable.</p>"},{"location":"operations/modules/","title":"Introduction","text":"<p>New types of modules are introduced in IRIS v1.4.0</p> <p>IRIS can be extended with modules. They can be split in two types:   </p> <ul> <li>Pipeline modules : Allow upload and process of evidences through modular pipelines (eg: EVTX parsing and injection into a database or data visualiser)</li> <li>Processor modules : Allow processing of IRIS data upon predefined actions / hooks. (eg: be notified when a new IOC is created and get VT/MISP insights for it).</li> </ul> <p>Modules (or DIM - DFIR-IRIS Modules) are actually Python packages which must be installed in the Python environment of iris-webapp and the worker (see Quick Start). Once installed in the Python environment, modules can be managed in <code>Advanced</code> &gt; <code>Modules</code>.</p> <p></p> <p>Info</p> <p>This section is only available for users with the Admin role.</p> <p>By default IRIS is shipped with multiple modules.  </p> <ul> <li>IrisVTModule  : Processor module offering VirusTotal insights (installed and registered)</li> <li>IrisMispModule  : Processor module offering MISP insights (installed and registered)</li> <li>IrisWebHooksModule  : Processor module offering webhooks support (manual installation)</li> <li>IrisCheckModule : A basic processor module logging every hooks. Used to check the good functionning. (installed and registered) </li> <li>IrisEVTXModule : A pipeline module offers EVTX import into Splunk through IRIS (installed but not registered) </li> </ul>"},{"location":"operations/modules/mod_management/","title":"Management","text":"<p>To add a module, the user can click on the \"+\" button:</p> <p></p> <p>Then the user must enter the name of the pre-installed module. The name of the pip package must be used.</p> <p></p> <p>If everything is ok, the module will appear on the list. It is currently disabled, and needs configuration before it can be enabled. To do so, the user can click on the module's name:</p> <p></p> <p>A new text box appears, showing information about the module, and a list of parameters to configure. Each mandatory parameter must be configured to enable the module.</p> <p></p> <p>After configuring all the mandatory parameters, the \"Enable button\" is revealed and the user can finally enable the module.</p> <p></p> <p>That's all! The user can confirm in the summary that the module is indeed enabled and ready to use.</p> <p></p> <p>Finally, the user can either disable or remove the module by clicking on the according buttons.</p> <p></p> <p>Now that the module is configured and enabled, let's see how we can use it!</p> <p>NB: As a temporary fix, after adding and configuring a module, one must restart the IRIS services (dockers) else the worker won't have the module installed properly.</p>"},{"location":"operations/modules/mod_management/#how-to-use-the-module","title":"How to use the module","text":"<p>As stated in the beginning, a module extends the capabilities of IRIS. For now, it allows importing evidences of your needs into what we call a pipeline, where data will be handled in the module (checking, parsing, ingestion...). In our provided module, IrisEVTXModule ingest EVTX files, parse them as JSON, and send the results to a Splunk instance using its HTTP event collector (HEC) endpoint.</p> <p>In IRIS, the files are always imported in the context of a case. To import a file, the user can click on <code>Manage cases</code> then <code>Update</code> tab.</p> <p></p> <p>In <code>Processing pipeline</code>, the user can pick a pipeline that will send the files to the wanted module. In our example, <code>EVTX pipeline</code> refers to the IrisEVTXModule module. Below, the user can fill the arguments needed by the according pipeline. Arguments can be optional. Finally, the user can import one or several files and click <code>Update</code> to start their processing by the module.  </p> <p>You can see in the picture below that the user will import four EVTX files.</p> <p></p> <p>The user can follow the upload of the different files with their respective progress bars.</p> <p></p> <p>Once uploaded, the status of the task can be observed on the <code>DIM Tasks</code> page.</p> <p></p> <p>Clicking on a Task ID shows information on the task processing.</p> <p></p> <p>After the processing of the files by the module, the list of the imported files is stored in the <code>Evidences</code> tab of the according case.</p> <p></p>"},{"location":"operations/modules/natives/IrisMISP/","title":"Module IRIS MISP","text":"<p>Introduced in IRIS v1.4.0</p> <p>This module offers an interface with MISP and IRIS to automatically enrich IOCs with MISP insight.   </p> <p>The source code is available here. It is installed by default but needs to be configured to be enabled.  </p> <p>Note</p> <p>The module is in its early stage and new features will be added over time.</p>"},{"location":"operations/modules/natives/IrisMISP/#features","title":"Features","text":"<p>Two types of enrichement mecanism are proposed : </p> <ul> <li>Manual : right-click on one or more IOCs and select <code>Get MISP insight</code>. This sends the targets IOCs to the module and insights will be fetched and applied. </li> <li>Automatic:<ul> <li>On create : This automatically fetch MISP insight for newly created IOC </li> <li>On update : This automatically  fetch MISP insight upon updates of an IOC </li> </ul> </li> </ul> <p>The following types of IOCs are handled by the module : </p> <ul> <li> ip-*</li> <li> domain</li> <li> hashes of types md5, sha224, sha256, sha512</li> </ul> <p>The insight request on an IOC not handled is simply ignored.  </p> <p>The insights take the form of attributes added to the IOC. They are based on configurable templates.  </p>"},{"location":"operations/modules/natives/IrisMISP/#configuration","title":"Configuration","text":"<p>The behavior of the module can be configured as needed. Head to the <code>Advanced</code> &gt; <code>Modules</code> &gt; <code>IrisMISP</code> to change it.   </p> <ul> <li>MISP configuration : A JSON describing the MISP access. See below for the structure.  </li> <li>Add MISP report as new IOC attribute : If set to true, the module adds a new attribute with the MISP insight. </li> <li>Domain report template : Provides a right-click menu option on IOCs to trigger the MISP module on selected elements. </li> <li>Triggers automatically on IOC create: If set to true, the module runs each time an IOC is created. Disabled by default. </li> <li>Triggers automatically on IOC update: If set to true, the module runs each time an IOC is updated. Disabled by default. </li> <li>Domain report template: Jinja2 report template for domain IOCs. Refers to the raw report to assess which fields are available. </li> <li>IP report template: Jinja2 report template for IP IOCs. Refers to the raw report to assess which fields are available. </li> <li>Hash report template: Jinja2 report template for hash IOCs. Refers to the raw report to assess which fields are available. </li> </ul>"},{"location":"operations/modules/natives/IrisMISP/#misp-configuration","title":"MISP configuration","text":"<p>At the time, only one MISP can be added. Future version might handled more than one MISP.   The expected structure is the following :  </p> <pre><code>{\n    \"name\": \"Public_MISP\", \n    \"type\":\"public\", \n    \"url\":[\"https://testmisp\"],\n    \"key\":[\"&lt;apikey&gt;\"], \n    \"ssl\":[false]\n}\n</code></pre>"},{"location":"operations/modules/natives/IrisSeika/","title":"Module IRIS Seika.io","text":"<p>Introduced in IRIS v2.4.11</p> <p>Warning</p> <p>This module is installed but not registered by default. To register it, head to the <code>Advanced</code> &gt; <code>Modules</code> &gt; <code>Add module</code> and input <code>iris_seika_module</code>.  </p> <p>This module offers an interface with Seika and IRIS to automatically enrich IOCs with Seika.io insight.  The source code is available here. It is installed by default but not registered and needs to be configured to be enabled.  </p>"},{"location":"operations/modules/natives/IrisSeika/#features","title":"Features","text":"<p>Two types of enrichment mechanism are proposed : </p> <ul> <li>Manual : right-click on one or more IOCs and select <code>Get Seika insight</code>. This sends the targets IOCs to the module and insights will be fetched and applied. </li> <li>Automatic:<ul> <li>On create : This automatically fetch Seika insight for newly created IOC </li> <li>On update : This automatically  fetch Seika insight upon updates of an IOC </li> </ul> </li> </ul> <p>The following types of IOCs are handled by the module : </p> <ul> <li> ip-*</li> </ul> <p>The insight request on an IOC not handled is simply ignored.  </p> <p>Two types of insights are proposed : </p> <ul> <li>tags : The module adds the following tags depending on the results of the Seika analysis:<ul> <li><code>seika:friendly</code> : the IOC is known to be friendly</li> <li><code>seika:scan</code> : the IOC has been seen executing scans</li> <li><code>seika:exploit</code> : the IOC has been seen exploiting vulnerabilities</li> <li><code>seika:bruteforce</code> : the ioct has been seen bruteforcing</li> </ul> </li> <li>new attribute : This adds a new attribute to the IOC with the Seika insight. It is based on a configurable template.   </li> </ul>"},{"location":"operations/modules/natives/IrisSeika/#configuration","title":"Configuration","text":"<p>The behavior of the module can be configured as needed. Head to the <code>Advanced</code> &gt; <code>Modules</code> &gt; <code>IrisSeika</code> to change it.   </p> <ul> <li>Seika API Key : API key used by the module to connect to Seika. Obtain it at Seika.io </li> <li>Manual triggers on IOCs : Provides a right-click menu option on IOCs to trigger the Seika module on selected elements. </li> <li>Triggers automatically on IOC create: If set to true, the module runs each time an IOC is created. Disabled by default. </li> <li>Triggers automatically on IOC update: If set to true, the module runs each time an IOC is updated. Disabled by default. </li> <li>Assign ASN tag to IP : If set to true, assigns the country code to the target IP IOC.</li> <li>Add Seika report as new IOC attribute: Creates a new attribute on the IOC, base on the Seika report. Templates define on this configuration are used. </li> <li>IP report template: Jinja2 report template for IP IOCs. Refers to the raw report to assess which fields are available. </li> </ul>"},{"location":"operations/modules/natives/IrisSeika/#seika-api-key","title":"Seika API Key","text":"<p>The Seika API key is obtained from the Seika.io website. It is used to authenticate the module to the Seika API.</p>"},{"location":"operations/modules/natives/IrisVT/","title":"Module IRIS VT","text":"<p>Introduced in IRIS v1.4.0</p> <p>This module offers an interface with VirusTotal and IRIS to automatically enrich IOCs with VT insight.  The source code is available here. It is installed by default but needs to be configured to be enabled.  </p>"},{"location":"operations/modules/natives/IrisVT/#features","title":"Features","text":"<p>Two types of enrichment mechanism are proposed : </p> <ul> <li>Manual : right-click on one or more IOCs and select <code>Get VT insight</code>. This sends the targets IOCs to the module and insights will be fetched and applied. </li> <li>Automatic:<ul> <li>On create : This automatically fetch VT insight for newly created IOC </li> <li>On update : This automatically  fetch VT insight upon updates of an IOC </li> </ul> </li> </ul> <p>The following types of IOCs are handled by the module : </p> <ul> <li> ip-*</li> <li> domain</li> <li> hashes of types md5, sha224, sha256, sha512</li> </ul> <p>The insight request on an IOC not handled is simply ignored.  </p> <p>Two types of insights are proposed : </p> <ul> <li>tags : This adds a <code>vt:malicious</code> or <code>vt:suspicious</code> tag if the detection thresholds are met (configurable). For domains, an ASN tag can also be added. </li> <li>new attribute : This adds a new attribute to the IOC with the VT insight. It is based on a configurable template.   </li> </ul>"},{"location":"operations/modules/natives/IrisVT/#configuration","title":"Configuration","text":"<p>The behavior of the module can be configured as needed. Head to the <code>Advanced</code> &gt; <code>Modules</code> &gt; <code>IrisVT</code> to change it.   </p> <ul> <li>VT API Key : API key used by the module to connect to VT </li> <li>VT Key is premium : Set to True to indicate the provided API Key is premium.</li> <li>Manual triggers on IOCs : Provides a right-click menu option on IOCs to trigger the VT module on selected elements. </li> <li>Triggers automatically on IOC create: If set to true, the module runs each time an IOC is created. Disabled by default. </li> <li>Triggers automatically on IOC update: If set to true, the module runs each time an IOC is updated. Disabled by default. </li> <li>Assign ASN tag to IP : If set to true, creates a new tag with ASN info on the target IP IOC. </li> <li>IOC tag malicious threshold : Float detection ratio above which the module adds a <code>vt:malicious</code>. To disable, add a value &gt; 100. </li> <li>IOC tag suspicious threshold: Float detection ratio above which the module adds a <code>vt:suspicious</code>. To disable, add a value &gt; 100. </li> <li>Add VT report as new IOC attribute: Creates a new attribute on the IOC, base on the VT report. Templates define on this configuration are used. </li> <li>Domain report template: Jinja2 report template for domain IOCs. Refers to the raw report to assess which fields are available. </li> <li>IP report template: Jinja2 report template for IP IOCs. Refers to the raw report to assess which fields are available. </li> <li>Hash report template: Jinja2 report template for hash IOCs. Refers to the raw report to assess which fields are available. </li> </ul>"},{"location":"operations/modules/natives/IrisWebHooks/","title":"Module IRIS Webhooks","text":"<p>This module offers webhooks support for IRIS. It can be configured to send almost any events to to an external service supporting webhooks, such as Discord, Slack or Microsoft Teams. It can also be used with automation tools such as Tines and Shufle to further automate IRIS. The source code is available here. </p>"},{"location":"operations/modules/natives/IrisWebHooks/#features","title":"Features","text":"<ul> <li>Support multiple webhooks receivers thanks to its configurable payload </li> <li>Support multiple webhooks receivers at the same time </li> <li>Allows to send one, multiple or all events to an external service </li> </ul> <p>Slack Example </p> <p></p>"},{"location":"operations/modules/natives/IrisWebHooks/#configuration","title":"Configuration","text":"<p>The expected configuration is a JSON file, following the structure.  </p> <p>Info</p> <p>Do not copy as-is the configuration below. The comments are not valid in JSON and the configuration will be rejected. </p> <pre><code>{   \n    // Base URL of IRIS. This is used to set the links in the messages\n    \"instance_url\": \"&lt;IRIS_INSTANCE_URL&gt;\",\n\n    // A list descrbing each webhook as a dict\n    \"webhooks\": [\n        {\n            // An internal name - it's never used outside of this configuration file \n            \"name\": \"Name of the webhook for internal reference only\",\n\n            // Set true or false to disable the webhook\n            \"active\": true,\n\n            // A list of the webhooks to listen to. See below for the list of hooks. \n            \"trigger_on\": ['on_postload_alert_create'],\n\n            // The URL of the webhook. This is the URL the module will do a POST request to. \n            \"request_url\": \"&lt;URL OF THE WEBHOOK&gt;\",\n\n            // Use a predefined rendering. The rendering cannot be changed. For more flexibility, set this value to false. \n            // If set to true, `request_rendering` should be set with one of the values described after.  \n            \"use_rendering\": true,\n\n            // Set to 'none' if use_rendering is disabled. \n            // Otherwise set to one of the following value            \n            // - markdown \n            // - markdown_slack\n            // - html\n            \"request_rendering\": \"none\", \n\n            // The body to be POST-ed by the webhook request URL \n            // See below for more information on the formatting.\n            \"request_body\": {\n                \"alert_title\": \"[ALERT] ${{alerts.alert_title}}\",\n                \"alert_description\": \"${{alerts.alert_description}}\"\n            }\n        },\n        {\n            \"name\": \"Another hook\",\n            \"active\": true,\n            \"use_rendering\": false,\n            \"trigger_on\": [\"on_postload_ioc_update\"],\n            \"request_url\": \"&lt;URL OF THE WEBHOOK 2&gt;\",\n            \"request_rendering\": \"none\", \n            \"request_body\": {\n                \"iocs\": \"iocs\"\n            }\n        }\n    ]\n}\n</code></pre> <p>The <code>trigger_on</code> expects one or more of the following IRIS hooks. To enable a set of hooks without writing them all, the following keywords can be used : </p> <ul> <li><code>all</code>: Includes all <code>on_postload</code> hooks </li> <li><code>all_create</code>: Includes all <code>on_postload_XX_create</code> hooks</li> <li><code>all_update</code>: Includes all <code>on_postload_XX_update</code> hooks</li> </ul>"},{"location":"operations/modules/natives/IrisWebHooks/#body-configuration","title":"Body configuration","text":"<p>The body contains the data to be sent in a POST request. It has to be a valid JSON. </p>"},{"location":"operations/modules/natives/IrisWebHooks/#rendering","title":"Rendering","text":"<p>If <code>use_rendering</code> is enabled, then only two markups can be used to set the content of the webhook.</p> <ul> <li><code>%TITLE%</code>: replaced with name of the case and event title, e.g \"[#54 - Ransomware] IOC created\". The title cannot be changed.  </li> <li><code>%DESCRIPTION%</code>: Description of the event, e.g \"UserX created IOC mimi.exe in case #54\". The description message is internal and cannot be changed. The message varies depending on the object which triggered the hook.  </li> </ul> <p>These markups can be placed in any values of the JSON body. As a webhook is triggered, they will be replaced by the module before the request is sent.  </p>"},{"location":"operations/modules/natives/IrisWebHooks/#raw-body","title":"Raw body","text":"<p>For more flexibility, one can use raw rendering by setting <code>use_rendering</code> to false. In such case, a raw JSON representation of the object related to the hook is available.  Each JSON depends on the hook. For instance for hooks related to <code>IOCs</code>, the available JSON is an object representing the IOC. For cases, a JSON object representing the case.  In most of the cases, these JOSN object matches what is documented in the API.    </p> <p>Either the whole object, specific fields, or both can be selected. If a field is selected, it needs to be wrapped  <code>${{ object }}</code>. For examples, the following body is a valid one:  </p> <pre><code>{\n    \"alert_title\": \"[New alert] ${{alerts.alert_title}}\",\n    \"alert_description\": \"${{alerts.alert_description}}\",\n    \"alert_meta\": \"A unrelated field wit static data\",\n    \"alert_dates\": {\n        \"creation_date\": \"${{ alerts.alert_creation_date }}\",\n        \"update_date\": \"${{ alerts.alert_update }}\"\n    }, \n    \"alert_raw\": \"alerts\"\n}\n</code></pre> <p>The value of the field <code>alert_raw</code>, will be automatically replaced by the raw value of the alerts.   </p> <p>Note</p> <p>When using <code>${{}}</code> the value is treated as a string. Thus objects will be flatened. </p>"},{"location":"operations/modules/natives/IrisWebHooks/#checking-iris-hooks-registration","title":"Checking IRIS hooks registration","text":"<p>Each time a webhook is added, the module subscribes to the specified hooks. After saving the configuration, one can check the registration was successful by filtering the <code>Registered hooks table</code> (don't forget to refresh the table).  </p> <p></p>"},{"location":"operations/modules/natives/IrisWebHooks/#troubleshooting","title":"Troubleshooting","text":"<p>Webhooks receivers are expecting specific message formatting to successfully process them. Please carefully read their documentations.   </p> <p>The module only handles JSON POST for the moment. If the target webhook receiver needs another type of request, please contact us so we can add it.  </p> <p>As any IRIS module, IrisWebhooks is logged into DIM Tasks. You can check the status of the requests made in these. Go to <code>DIM Tasks</code> and then filter with <code>webhooks</code>. You can then check details info by clicking in the Task ID. More info might be available in the Docker worker logs depending on the situation. </p> <p></p>"},{"location":"operations/modules/natives/IrisWebHooks/#important-notes-and-know-issues","title":"Important Notes and know issues","text":"<ul> <li>For a complete experience, some features are missing on the server side - such as case info and user info passed to modules. For instance, IOC events do not hold case info, assets update events do not hold the user info who made the change.  </li> </ul>"},{"location":"python_client/","title":"Introduction","text":"<p><code>dfir_iris_client</code> offers a Python interface to communicate with IRIS.  </p> <p>It relies exclusively on the API, which means output of the methods are the same as specified in the API reference. </p>"},{"location":"python_client/#installation","title":"Installation","text":"<p>It can be easily with pip : <code>pip3 install dfir_iris_client</code>.  </p> <p>The source code of the project is available here.  </p>"},{"location":"python_client/#versions","title":"Versions","text":"<p>The Python client version follows the API versions (until the patch level). Meaning for API v1.0.1, one need to install <code>dfir_iris_client-1.0.1</code>. </p>"},{"location":"python_client/#examples","title":"Examples","text":"<p>Examples of usage are available here. </p>"},{"location":"python_client/#documentation","title":"Documentation","text":"<p>The documentation of the client is available on client.docs.dfir-iris.org. </p>"}]}